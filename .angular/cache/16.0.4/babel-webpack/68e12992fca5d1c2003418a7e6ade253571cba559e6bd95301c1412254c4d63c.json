{"ast":null,"code":"import { GoogleLoginProvider } from \"@abacritt/angularx-social-login\";\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@abacritt/angularx-social-login\";\n// import { EnvironmentUrlService } from './path/to/environment-url.service';\nclass AuthService {\n  constructor(http,\n  //  private envUrl: EnvironmentUrlService, \n  // private jwtHelper: JwtHelperService,\n  externalAuthService) {\n    this.http = http;\n    this.externalAuthService = externalAuthService;\n    this.apiUrl = 'https://your-api-url.com/api/users';\n    this.authChangeSub = new Subject();\n    this.extAuthChangeSub = new Subject();\n    this.authChanged = this.authChangeSub.asObservable();\n    this.extAuthChanged = this.extAuthChangeSub.asObservable();\n    //'400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com'\n    this.signInWithGoogle = () => {\n      this.externalAuthService.signIn(GoogleLoginProvider.PROVIDER_ID);\n    };\n    this.signOutExternal = () => {\n      this.externalAuthService.signOut();\n    };\n    this.externalAuthService.authState.subscribe(user => {\n      console.log(user);\n      this.extAuthChangeSub.next(user);\n    });\n  }\n  sendUserData(user) {\n    return this.http.post(this.apiUrl, user);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SocialAuthService));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["GoogleLoginProvider","Subject","AuthService","constructor","http","externalAuthService","apiUrl","authChangeSub","extAuthChangeSub","authChanged","asObservable","extAuthChanged","signInWithGoogle","signIn","PROVIDER_ID","signOutExternal","signOut","authState","subscribe","user","console","log","next","sendUserData","post","i0","ɵɵinject","i1","HttpClient","i2","SocialAuthService","factory","ɵfac","providedIn"],"sources":["D:\\graduation project\\Graduation_Project-Dubbizel--main\\Graduation_Project-Dubbizel--main\\Dubbizel_Angular\\src\\app\\Service\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { SocialAuthService, SocialUser } from \"@abacritt/angularx-social-login\";\nimport { GoogleLoginProvider } from \"@abacritt/angularx-social-login\";\nimport { Subject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n// import { EnvironmentUrlService } from './path/to/environment-url.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = 'https://your-api-url.com/api/users';\n\n  private authChangeSub = new Subject<boolean>();\nprivate extAuthChangeSub = new Subject<SocialUser>();\npublic authChanged = this.authChangeSub.asObservable();\npublic extAuthChanged = this.extAuthChangeSub.asObservable();\nconstructor(private http: HttpClient,\n  //  private envUrl: EnvironmentUrlService, \n  // private jwtHelper: JwtHelperService,\n   private externalAuthService: SocialAuthService) { \n    this.externalAuthService.authState.subscribe((user) => {\n      console.log(user)\n      this.extAuthChangeSub.next(user);\n    })\n  }\n  //'400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com'\n\n  public signInWithGoogle = ()=> {\n    this.externalAuthService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  }\n  sendUserData(user: any) {\n    return this.http.post(this.apiUrl, user);\n  }\n  public signOutExternal = () => {\n    this.externalAuthService.signOut();\n  }\n}\n"],"mappings":"AAEA,SAASA,mBAAmB,QAAQ,iCAAiC;AACrE,SAASC,OAAO,QAAQ,MAAM;;;;AAE9B;AAGA,MAGaC,WAAW;EAOxBC,YAAoBC,IAAgB;EAClC;EACA;EACSC,mBAAsC;IAH7B,KAAAD,IAAI,GAAJA,IAAI;IAGb,KAAAC,mBAAmB,GAAnBA,mBAAmB;IATpB,KAAAC,MAAM,GAAG,oCAAoC;IAE7C,KAAAC,aAAa,GAAG,IAAIN,OAAO,EAAW;IACxC,KAAAO,gBAAgB,GAAG,IAAIP,OAAO,EAAc;IAC7C,KAAAQ,WAAW,GAAG,IAAI,CAACF,aAAa,CAACG,YAAY,EAAE;IAC/C,KAAAC,cAAc,GAAG,IAAI,CAACH,gBAAgB,CAACE,YAAY,EAAE;IAU1D;IAEO,KAAAE,gBAAgB,GAAG,MAAI;MAC5B,IAAI,CAACP,mBAAmB,CAACQ,MAAM,CAACb,mBAAmB,CAACc,WAAW,CAAC;IAClE,CAAC;IAIM,KAAAC,eAAe,GAAG,MAAK;MAC5B,IAAI,CAACV,mBAAmB,CAACW,OAAO,EAAE;IACpC,CAAC;IAfC,IAAI,CAACX,mBAAmB,CAACY,SAAS,CAACC,SAAS,CAAEC,IAAI,IAAI;MACpDC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAI,CAACX,gBAAgB,CAACc,IAAI,CAACH,IAAI,CAAC;IAClC,CAAC,CAAC;EACJ;EAMAI,YAAYA,CAACJ,IAAS;IACpB,OAAO,IAAI,CAACf,IAAI,CAACoB,IAAI,CAAC,IAAI,CAAClB,MAAM,EAAEa,IAAI,CAAC;EAC1C;;AAvBWjB,WAAW,C;mBAAXA,WAAW,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,iBAAA;AAAA;AAAX5B,WAAW,C;SAAXA,WAAW;EAAA6B,OAAA,EAAX7B,WAAW,CAAA8B,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEP/B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}