{"ast":null,"code":"// import { AuthService } from 'src/app/Service/auth.service';\nimport { GoogleLoginProvider } from '@abacritt/angularx-social-login';\nexport class LoginComponent {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  ngOnInit() {\n    this.userSubscription = this.authService.authState.subscribe(user => {\n      this.user = user;\n    });\n    gapi.load('auth2', () => {\n      gapi.auth2.init({\n        client_id: '<YOUR_GOOGLE_CLIENT_ID>'\n      });\n    });\n  }\n  signInWithGoogle() {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).catch(error => {\n      console.error('Error signing in:', error);\n    });\n  }\n  signOut() {\n    this.authService.signOut().catch(error => {\n      console.error('Error signing out:', error);\n    });\n  }\n}","map":{"version":3,"names":["GoogleLoginProvider","LoginComponent","constructor","authService","ngOnInit","userSubscription","authState","subscribe","user","gapi","load","auth2","init","client_id","signInWithGoogle","signIn","PROVIDER_ID","catch","error","console","signOut"],"sources":["D:\\graduation project\\Graduation_Project-Dubbizel--main\\Graduation_Project-Dubbizel--main\\Dubbizel_Angular\\src\\app\\Login\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n// import { AuthService } from 'src/app/Service/auth.service';\nimport { SocialAuthService, GoogleLoginProvider, SocialUser } from '@abacritt/angularx-social-login';\nimport { Subscription } from 'rxjs';\n\nimport { GoogleAuth } from 'google-auth-library';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\ndeclare const gapi: any;\n\nexport class LoginComponent implements OnInit{\n  showError:any\n  user!: SocialUser;\n  private userSubscription: Subscription | undefined;\n\n  constructor(private authService: SocialAuthService) {}\n\n  ngOnInit(): void {\n    this.userSubscription = this.authService.authState.subscribe(user => {\n      this.user = user;\n    });\n\n    gapi.load('auth2', () => {\n      gapi.auth2.init({\n        client_id: '<YOUR_GOOGLE_CLIENT_ID>'\n      });\n    });\n  }\n\n  signInWithGoogle(): void {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).catch(error => {\n      console.error('Error signing in:', error);\n    });\n  }\n\n  signOut(): void {\n    this.authService.signOut().catch(error => {\n      console.error('Error signing out:', error);\n    });\n  }\n//  async ngOnInit(){\n//   const auth = new GoogleAuth();\n//   const client = await auth.getClient();\n\n// }\n  // externalLogin = () => {\n  //   this.showError = false;\n  //   this.authService.signInWithGoogle();\n  // }\n}\n"],"mappings":"AACA;AACA,SAA4BA,mBAAmB,QAAoB,iCAAiC;AAYpG,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,WAA8B;IAA9B,KAAAA,WAAW,GAAXA,WAAW;EAAsB;EAErDC,QAAQA,CAAA;IACN,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACF,WAAW,CAACG,SAAS,CAACC,SAAS,CAACC,IAAI,IAAG;MAClE,IAAI,CAACA,IAAI,GAAGA,IAAI;IAClB,CAAC,CAAC;IAEFC,IAAI,CAACC,IAAI,CAAC,OAAO,EAAE,MAAK;MACtBD,IAAI,CAACE,KAAK,CAACC,IAAI,CAAC;QACdC,SAAS,EAAE;OACZ,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAC,gBAAgBA,CAAA;IACd,IAAI,CAACX,WAAW,CAACY,MAAM,CAACf,mBAAmB,CAACgB,WAAW,CAAC,CAACC,KAAK,CAACC,KAAK,IAAG;MACrEC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C,CAAC,CAAC;EACJ;EAEAE,OAAOA,CAAA;IACL,IAAI,CAACjB,WAAW,CAACiB,OAAO,EAAE,CAACH,KAAK,CAACC,KAAK,IAAG;MACvCC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC,CAAC;EACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}