{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\n// import { AuthService } from 'src/app/Service/auth.service';\nimport { GoogleLoginProvider } from '@abacritt/angularx-social-login';\nlet LoginComponent = class LoginComponent {\n  constructor(authService, ngZone) {\n    this.authService = authService;\n    this.ngZone = ngZone;\n  }\n  ngOnInit() {\n    this.userSubscription = this.authService.authState.subscribe(user => {\n      this.user = user;\n    });\n    gapi.load('auth2', () => {\n      gapi.auth2.init({\n        client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com'\n      });\n    });\n  }\n  onSignIn() {\n    const auth2 = gapi.auth2.getAuthInstance();\n    auth2.signIn().then(googleUser => {\n      this.ngZone.run(() => {\n        const idToken = googleUser.getAuthResponse().id_token;\n        this.authService.signIn(GoogleLoginProvider.PROVIDER_ID, {\n          idToken\n        }).catch(error => {\n          console.error('Error signing in:', error);\n        });\n      });\n    });\n  }\n  signInWithGoogle() {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).catch(error => {\n      console.error('Error signing in:', error);\n    });\n  }\n  signOut() {\n    this.authService.signOut().catch(error => {\n      console.error('Error signing out:', error);\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","GoogleLoginProvider","LoginComponent","constructor","authService","ngZone","ngOnInit","userSubscription","authState","subscribe","user","gapi","load","auth2","init","client_id","onSignIn","getAuthInstance","signIn","then","googleUser","run","idToken","getAuthResponse","id_token","PROVIDER_ID","catch","error","console","signInWithGoogle","signOut","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\graduation project\\Graduation_Project-Dubbizel--main\\Graduation_Project-Dubbizel--main\\Dubbizel_Angular\\src\\app\\Login\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n// import { AuthService } from 'src/app/Service/auth.service';\nimport { SocialAuthService, GoogleLoginProvider, SocialUser } from '@abacritt/angularx-social-login';\nimport { Subscription } from 'rxjs';\n\nimport { GoogleAuth } from 'google-auth-library';\n\ndeclare const gapi: any;\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit{\n  showError:any\n  user!: SocialUser;\n  private userSubscription: Subscription | undefined;\n\n  constructor(private authService: SocialAuthService,private ngZone: NgZone) {}\n\n  ngOnInit(): void {\n    this.userSubscription = this.authService.authState.subscribe(user => {\n      this.user = user;\n    });\n\n    gapi.load('auth2', () => {\n      gapi.auth2.init({\n        client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com'\n\n      });\n    });\n  }\n\n  onSignIn(): void {\n    const auth2 = gapi.auth2.getAuthInstance();\n    auth2.signIn().then(googleUser => {\n      this.ngZone.run(() => {\n        const idToken = googleUser.getAuthResponse().id_token;\n        this.authService.signIn(GoogleLoginProvider.PROVIDER_ID, { idToken }).catch(error => {\n          console.error('Error signing in:', error);\n        });\n      });\n    });\n  }\n\n\n  signInWithGoogle(): void {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).catch(error => {\n      console.error('Error signing in:', error);\n    });\n  }\n\n  signOut(): void {\n    this.authService.signOut().catch(error => {\n      console.error('Error signing out:', error);\n    });\n  }\n//  async ngOnInit(){\n//   const auth = new GoogleAuth();\n//   const client = await auth.getClient();\n\n// }\n  // externalLogin = () => {\n  //   this.showError = false;\n  //   this.authService.signInWithGoogle();\n  // }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD;AACA,SAA4BC,mBAAmB,QAAoB,iCAAiC;AAYpG,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAKzBC,YAAoBC,WAA8B,EAASC,MAAc;IAArD,KAAAD,WAAW,GAAXA,WAAW;IAA4B,KAAAC,MAAM,GAANA,MAAM;EAAW;EAE5EC,QAAQA,CAAA;IACN,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACH,WAAW,CAACI,SAAS,CAACC,SAAS,CAACC,IAAI,IAAG;MAClE,IAAI,CAACA,IAAI,GAAGA,IAAI;IAClB,CAAC,CAAC;IAEFC,IAAI,CAACC,IAAI,CAAC,OAAO,EAAE,MAAK;MACtBD,IAAI,CAACE,KAAK,CAACC,IAAI,CAAC;QACdC,SAAS,EAAE;OAEZ,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,MAAMH,KAAK,GAAGF,IAAI,CAACE,KAAK,CAACI,eAAe,EAAE;IAC1CJ,KAAK,CAACK,MAAM,EAAE,CAACC,IAAI,CAACC,UAAU,IAAG;MAC/B,IAAI,CAACf,MAAM,CAACgB,GAAG,CAAC,MAAK;QACnB,MAAMC,OAAO,GAAGF,UAAU,CAACG,eAAe,EAAE,CAACC,QAAQ;QACrD,IAAI,CAACpB,WAAW,CAACc,MAAM,CAACjB,mBAAmB,CAACwB,WAAW,EAAE;UAAEH;QAAO,CAAE,CAAC,CAACI,KAAK,CAACC,KAAK,IAAG;UAClFC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;QAC3C,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAGAE,gBAAgBA,CAAA;IACd,IAAI,CAACzB,WAAW,CAACc,MAAM,CAACjB,mBAAmB,CAACwB,WAAW,CAAC,CAACC,KAAK,CAACC,KAAK,IAAG;MACrEC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C,CAAC,CAAC;EACJ;EAEAG,OAAOA,CAAA;IACL,IAAI,CAAC1B,WAAW,CAAC0B,OAAO,EAAE,CAACJ,KAAK,CAACC,KAAK,IAAG;MACvCC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC,CAAC;EACJ;CAUD;AArDYzB,cAAc,GAAA6B,UAAA,EAN1B/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EAEWhC,cAAc,CAqD1B;SArDYA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}