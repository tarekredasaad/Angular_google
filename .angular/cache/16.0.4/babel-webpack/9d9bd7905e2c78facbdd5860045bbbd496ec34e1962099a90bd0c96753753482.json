{"ast":null,"code":"// import { AuthService } from 'src/app/Service/auth.service';\nimport { GoogleLoginProvider } from '@abacritt/angularx-social-login';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@abacritt/angularx-social-login\";\nimport * as i2 from \"@angular/common\";\nfunction LoginComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"img\", 4);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_7_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.signOut());\n    });\n    i0.ɵɵtext(5, \"Sign out\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r0.user.photoUrl, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r0.user.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.user.name);\n  }\n}\nfunction LoginComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"asl-google-signin-button\");\n    i0.ɵɵelementStart(2, \"div\", 6);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_8_Template_div_click_2_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onSignIn());\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nclass LoginComponent {\n  constructor(authService, ngZone) {\n    this.authService = authService;\n    this.ngZone = ngZone;\n  }\n  ngOnInit() {\n    this.userSubscription = this.authService.authState.subscribe(user => {\n      this.user = user;\n    });\n    gapi.load('auth2', () => {\n      gapi.auth2.init({\n        client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com'\n      });\n    });\n  }\n  onSignIn() {\n    const auth2 = gapi.auth2.getAuthInstance();\n    auth2.signIn().then(googleUser => {\n      this.ngZone.run(() => {\n        const idToken = googleUser.getAuthResponse().id_token;\n        this.authService.signIn(GoogleLoginProvider.PROVIDER_ID, {\n          idToken\n        }).catch(error => {\n          console.error('Error signing in:', error);\n        });\n      });\n    });\n  }\n  signInWithGoogle() {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).catch(error => {\n      console.error('Error signing in:', error);\n    });\n  }\n  signOut() {\n    this.authService.signOut().catch(error => {\n      console.error('Error signing out:', error);\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.SocialAuthService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 10,\n  vars: 2,\n  consts: [[1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [4, \"ngIf\"], [\"width\", \"50\", \"height\", \"50\", 3, \"src\", \"alt\"], [3, \"click\"], [\"data-onsuccess\", \"onSignIn\", 1, \"g-signin2\", 3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(4, \" ... \");\n      i0.ɵɵelement(5, \"hr\");\n      i0.ɵɵelementStart(6, \"div\");\n      i0.ɵɵtemplate(7, LoginComponent_div_7_Template, 6, 3, \"div\", 3);\n      i0.ɵɵtemplate(8, LoginComponent_div_8_Template, 3, 0, \"div\", 3);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtext(9, \"\\n...\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.user);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.user);\n    }\n  },\n  dependencies: [i2.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginComponent };","map":{"version":3,"names":["GoogleLoginProvider","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_div_7_Template_button_click_4_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","signOut","ɵɵadvance","ɵɵproperty","ctx_r0","user","photoUrl","ɵɵsanitizeUrl","name","ɵɵtextInterpolate","LoginComponent_div_8_Template_div_click_2_listener","_r5","ctx_r4","onSignIn","LoginComponent","constructor","authService","ngZone","ngOnInit","userSubscription","authState","subscribe","gapi","load","auth2","init","client_id","getAuthInstance","signIn","then","googleUser","run","idToken","getAuthResponse","id_token","PROVIDER_ID","catch","error","console","signInWithGoogle","ɵɵdirectiveInject","i1","SocialAuthService","NgZone","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵtemplate","LoginComponent_div_7_Template","LoginComponent_div_8_Template"],"sources":["D:\\graduation project\\Graduation_Project-Dubbizel--main\\Graduation_Project-Dubbizel--main\\Dubbizel_Angular\\src\\app\\Login\\login\\login.component.ts","D:\\graduation project\\Graduation_Project-Dubbizel--main\\Graduation_Project-Dubbizel--main\\Dubbizel_Angular\\src\\app\\Login\\login\\login.component.html"],"sourcesContent":["import { Component, NgZone, OnInit } from '@angular/core';\n// import { AuthService } from 'src/app/Service/auth.service';\nimport { SocialAuthService, GoogleLoginProvider, SocialUser } from '@abacritt/angularx-social-login';\nimport { Subscription } from 'rxjs';\n\nimport { GoogleAuth } from 'google-auth-library';\n\ndeclare const gapi: any;\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit{\n  showError:any\n  user!: SocialUser;\n  private userSubscription: Subscription | undefined;\n\n  constructor(private authService: SocialAuthService,private ngZone: NgZone) {}\n\n  ngOnInit(): void {\n    this.userSubscription = this.authService.authState.subscribe(user => {\n      this.user = user;\n    });\n\n    gapi.load('auth2', () => {\n      gapi.auth2.init({\n        client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com'\n\n      });\n    });\n  }\n\n  onSignIn(): void {\n    const auth2 = gapi.auth2.getAuthInstance();\n    auth2.signIn().then((googleUser: { getAuthResponse: () => { (): any; new(): any; id_token: any; }; }) => {\n      this.ngZone.run(() => {\n        const idToken = googleUser.getAuthResponse().id_token;\n        this.authService.signIn(GoogleLoginProvider.PROVIDER_ID, { idToken }).catch(error => {\n          console.error('Error signing in:', error);\n        });\n      });\n    });\n  }\n\n\n  signInWithGoogle(): void {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).catch(error => {\n      console.error('Error signing in:', error);\n    });\n  }\n\n  signOut(): void {\n    this.authService.signOut().catch(error => {\n      console.error('Error signing out:', error);\n    });\n  }\n//  async ngOnInit(){\n//   const auth = new GoogleAuth();\n//   const client = await auth.getClient();\n\n// }\n  // externalLogin = () => {\n  //   this.showError = false;\n  //   this.authService.signInWithGoogle();\n  // }\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <h1 class=\"card-title\">Login</h1>\n        ...\n        <!-- <form [formGroup]=\"loginForm\" autocomplete=\"off\" novalidate (ngSubmit)=\"loginUser(loginForm.value)\">\n            ...\n        </form> -->\n        <hr>\n        <div>\n            <div *ngIf=\"user\">\n                <img [src]=\"user.photoUrl\" [alt]=\"user.name\" width=\"50\" height=\"50\">\n                <span>{{ user.name }}</span>\n                <button (click)=\"signOut()\">Sign out</button>\n              </div>\n              <div *ngIf=\"!user\">\n                <asl-google-signin-button >\n\n                    <!-- <button (click)=\"signInWithGoogle()\">Sign in with Google</button> -->\n                </asl-google-signin-button>\n                <div class=\"g-signin2\" (click)=\"onSignIn()\" data-onsuccess=\"onSignIn\"></div>\n\n              </div>\n              \n        </div>\n    </div>\n</div>\n\n<script src=\"https://accounts.google.com/gsi/client?hl=fr\" async defer></script>\n...\n<script>\ngoogle.accounts.id.renderButton(\n  document.getElementById(\"buttonDiv\"),                \n  { locale: \"fr\" }\n);\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}