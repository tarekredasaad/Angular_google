{"ast":null,"code":"\"use strict\";\n\n// import { Component, NgZone, OnInit } from '@angular/core';\n// // import { AuthService } from 'src/app/Service/auth.service';\n// import { SocialAuthService, GoogleLoginProvider, SocialUser } from '@abacritt/angularx-social-login';\n// import { Subscription } from 'rxjs';\n// import { GoogleAuth } from 'google-auth-library';\n// declare const gapi: any;\n// @Component({\n//   selector: 'app-login',\n//   templateUrl: './login.component.html',\n//   styleUrls: ['./login.component.scss']\n// })\n// export class LoginComponent implements OnInit{\n//   showError:any\n//   user!: SocialUser;\n//   private userSubscription: Subscription | undefined;\n//   constructor(private authService: SocialAuthService,private ngZone: NgZone) {}\n//   ngOnInit(): void {\n//     this.userSubscription = this.authService.authState.subscribe(user => {\n//       this.user = user;\n//     });\n//     gapi.load('auth2', () => {\n//       gapi.auth2.init({\n//         client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com'\n//       });\n//     });\n//   }\n//   onSignIn(): void {\n//     const auth2 = gapi.auth2.getAuthInstance();\n//     auth2.signIn().then((googleUser: { getAuthResponse: () => { (): any; new(): any; id_token: any; }; }) => {\n//       this.ngZone.run(() => {\n//         const idToken = googleUser.getAuthResponse().id_token;\n//         this.authService.signIn(GoogleLoginProvider.PROVIDER_ID, { idToken }).catch(error => {\n//           console.error('Error signing in:', error);\n//         });\n//       });\n//     });\n//   }\n//   signInWithGoogle(): void {\n//     this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).catch(error => {\n//       console.error('Error signing in:', error);\n//     });\n//   }\n//   signOut(): void {\n//     this.authService.signOut().catch(error => {\n//       console.error('Error signing out:', error);\n//     });\n//   }\n// //  async ngOnInit(){\n// //   const auth = new GoogleAuth();\n// //   const client = await auth.getClient();\n// // }\n//   // externalLogin = () => {\n//   //   this.showError = false;\n//   //   this.authService.signInWithGoogle();\n//   // }\n// }\n// import { Component, OnInit, OnDestroy, ViewChild, ElementRef, AfterViewInit, NgZone } from '@angular/core';\n// import { SocialAuthService, GoogleLoginProvider , SocialUser } from '@abacritt/angularx-social-login';\n// import { Subscription } from 'rxjs';\n// import { AuthService } from 'src/app/Service/auth.service';\n// declare const google: any;\n// @Component({\n//   selector: 'app-login',\n//   templateUrl: './login.component.html',\n//   styleUrls: ['./login.component.scss']\n// })\n// export class LoginComponent implements OnInit, OnDestroy, AfterViewInit {\n//   user: any;\n//   private userSubscription: any;\n//   showError:any\n//   @ViewChild('googleSignInButton', { static: false })\n//   googleSignInButton!: ElementRef;\n//   auth2: any;\n//   @ViewChild('loginRef', {static: false }) loginElement!: ElementRef;\n//   constructor(private AuthService :AuthService ,private authService: SocialAuthService, private ngZone: NgZone) {\n//     this.AuthService.fetchData().subscribe(data => {\n//       console.log(data);\n//     });\n//   }\n//   ngOnInit(): void {\n//      this.authService.authState.subscribe(user => {\n//       this.user = user;\n//     });\n//     console.log(this.user)\n//     setInterval(() => {\n//       if(this.AuthService.user != null){\n//         console.log(\"good\")\n//         console.log(this.AuthService.externalAuth)\n//         console.log(this.AuthService.user)\n//         this.AuthService.sendUserData(this.AuthService.externalAuth).subscribe({\n//           next: data => console.log(data),\n//           error: err => console.log(err),\n//         })\n//       }\n//     }\n//       ,5000)\n//   }\n//   callLoginButton() {\n//     this.auth2.attachClickHandler(this.loginElement.nativeElement, {},\n//       (googleAuthUser:any) => {\n//         let profile = googleAuthUser.getBasicProfile();\n//         console.log('Token || ' + googleAuthUser.getAuthResponse().id_token);\n//         console.log('ID: ' + profile.getId());\n//         console.log('Name: ' + profile.getName());\n//         console.log('Image URL: ' + profile.getImageUrl());\n//         console.log('Email: ' + profile.getEmail());\n//        /* Write Your Code Here */\n//       }, (error:any) => {\n//         alert(JSON.stringify(error, undefined, 2));\n//       });\n//   }\n//   googleAuthSDK() {\n//     (<any>window)['googleSDKLoaded'] = () => {\n//       (<any>window)['gapi'].load('auth2', () => {\n//         this.auth2 = (<any>window)['gapi'].auth2.init({\n//           client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com',\n//           cookiepolicy: 'single_host_origin',\n//           scope: 'profile email'\n//         });\n//         this.callLoginButton();\n//       });\n//     }\n//     (function(d, s, id){\n//       var js, fjs = d.getElementsByTagName(s)[0];\n//       if (d.getElementById(id)) {return;}\n//       js = d.createElement('script'); \n//       js.id = id;\n//       js.src = \"https://apis.google.com/js/platform.js?onload=googleSDKLoaded\";\n//       fjs?.parentNode?.insertBefore(js, fjs);\n//     }(document, 'script', 'google-jssdk'));\n//   }\n//   onGoogleSignIn(): void {\n//     this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n//   }\n//   externalLogin = () => {\n//     this.showError = false;\n//     this.AuthService.signInWithGoogle();\n//   }\n//   signInWithGoogle(): void {\n//     this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n//   }\n//   ngAfterViewInit(): void {\n//     this.renderGoogleSignInButton();\n//     this.googleAuthSDK();\n//   }\n//   renderGoogleSignInButton(): void {\n//     google.accounts.id.initialize({\n//       client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com',\n//       callback: (response:any) => this.onSignIn()\n//     });\n//     console.log(\"reach\")\n//     google.accounts.id.renderButton(this.googleSignInButton.nativeElement, {\n//       theme: 'outline',\n//       size: 'large',\n//       width: '240',\n//       height: '50',\n//       longtitle: true\n//     });\n//   }\n//   onSignIn(): void {\n//     // this.ngZone.run(() => {\n//       console.log(\"reach on\")\n//       // const idToken = response.credential;\n//       this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).catch(error => {\n//         console.error('Error signing in:', error);\n//       });\n//     // });\n//   }\n//   signOut(): void {\n//     this.authService.signOut().catch(error => {\n//       console.error('Error signing out:', error);\n//     });\n//   }\n//   ngOnDestroy(): void {\n//     if (this.userSubscription) {\n//       this.userSubscription.unsubscribe();\n//     }\n//   }\n// }","map":{"version":3,"names":[],"sources":["D:\\graduation project\\Graduation_Project-Dubbizel--main\\Graduation_Project-Dubbizel--main\\Dubbizel_Angular\\src\\app\\Login\\login\\login.component.ts"],"sourcesContent":["// import { Component, NgZone, OnInit } from '@angular/core';\n// // import { AuthService } from 'src/app/Service/auth.service';\n// import { SocialAuthService, GoogleLoginProvider, SocialUser } from '@abacritt/angularx-social-login';\n// import { Subscription } from 'rxjs';\n\n// import { GoogleAuth } from 'google-auth-library';\n\n// declare const gapi: any;\n// @Component({\n//   selector: 'app-login',\n//   templateUrl: './login.component.html',\n//   styleUrls: ['./login.component.scss']\n// })\n\n// export class LoginComponent implements OnInit{\n//   showError:any\n//   user!: SocialUser;\n//   private userSubscription: Subscription | undefined;\n\n//   constructor(private authService: SocialAuthService,private ngZone: NgZone) {}\n\n//   ngOnInit(): void {\n//     this.userSubscription = this.authService.authState.subscribe(user => {\n//       this.user = user;\n//     });\n\n//     gapi.load('auth2', () => {\n//       gapi.auth2.init({\n//         client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com'\n\n//       });\n//     });\n//   }\n\n//   onSignIn(): void {\n//     const auth2 = gapi.auth2.getAuthInstance();\n//     auth2.signIn().then((googleUser: { getAuthResponse: () => { (): any; new(): any; id_token: any; }; }) => {\n//       this.ngZone.run(() => {\n//         const idToken = googleUser.getAuthResponse().id_token;\n//         this.authService.signIn(GoogleLoginProvider.PROVIDER_ID, { idToken }).catch(error => {\n//           console.error('Error signing in:', error);\n//         });\n//       });\n//     });\n//   }\n\n\n//   signInWithGoogle(): void {\n//     this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).catch(error => {\n//       console.error('Error signing in:', error);\n//     });\n//   }\n\n//   signOut(): void {\n//     this.authService.signOut().catch(error => {\n//       console.error('Error signing out:', error);\n//     });\n//   }\n// //  async ngOnInit(){\n// //   const auth = new GoogleAuth();\n// //   const client = await auth.getClient();\n\n// // }\n//   // externalLogin = () => {\n//   //   this.showError = false;\n//   //   this.authService.signInWithGoogle();\n//   // }\n// }\n// import { Component, OnInit, OnDestroy, ViewChild, ElementRef, AfterViewInit, NgZone } from '@angular/core';\n// import { SocialAuthService, GoogleLoginProvider , SocialUser } from '@abacritt/angularx-social-login';\n// import { Subscription } from 'rxjs';\n// import { AuthService } from 'src/app/Service/auth.service';\n\n// declare const google: any;\n\n// @Component({\n//   selector: 'app-login',\n//   templateUrl: './login.component.html',\n//   styleUrls: ['./login.component.scss']\n// })\n// export class LoginComponent implements OnInit, OnDestroy, AfterViewInit {\n//   user: any;\n//   private userSubscription: any;\n//   showError:any\n//   @ViewChild('googleSignInButton', { static: false })\n//   googleSignInButton!: ElementRef;\n//   auth2: any;\n    \n//   @ViewChild('loginRef', {static: false }) loginElement!: ElementRef;\n     \n//   constructor(private AuthService :AuthService ,private authService: SocialAuthService, private ngZone: NgZone) {\n\n//     this.AuthService.fetchData().subscribe(data => {\n//       console.log(data);\n//     });\n//   }\n\n//   ngOnInit(): void {\n//      this.authService.authState.subscribe(user => {\n//       this.user = user;\n//     });\n    \n//     console.log(this.user)\n//     setInterval(() => {\n      \n  \n\n//       if(this.AuthService.user != null){\n//         console.log(\"good\")\n\n//         console.log(this.AuthService.externalAuth)\n//         console.log(this.AuthService.user)\n//         this.AuthService.sendUserData(this.AuthService.externalAuth).subscribe({\n//           next: data => console.log(data),\n//           error: err => console.log(err),\n//         })\n//       }\n//     }\n      \n//       ,5000)\n//   }\n\n//   callLoginButton() {\n     \n//     this.auth2.attachClickHandler(this.loginElement.nativeElement, {},\n//       (googleAuthUser:any) => {\n     \n//         let profile = googleAuthUser.getBasicProfile();\n//         console.log('Token || ' + googleAuthUser.getAuthResponse().id_token);\n//         console.log('ID: ' + profile.getId());\n//         console.log('Name: ' + profile.getName());\n//         console.log('Image URL: ' + profile.getImageUrl());\n//         console.log('Email: ' + profile.getEmail());\n            \n//        /* Write Your Code Here */\n    \n//       }, (error:any) => {\n//         alert(JSON.stringify(error, undefined, 2));\n//       });\n \n//   }\n  \n//   googleAuthSDK() {\n     \n//     (<any>window)['googleSDKLoaded'] = () => {\n//       (<any>window)['gapi'].load('auth2', () => {\n//         this.auth2 = (<any>window)['gapi'].auth2.init({\n//           client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com',\n//           cookiepolicy: 'single_host_origin',\n//           scope: 'profile email'\n//         });\n//         this.callLoginButton();\n//       });\n//     }\n\n//     (function(d, s, id){\n//       var js, fjs = d.getElementsByTagName(s)[0];\n//       if (d.getElementById(id)) {return;}\n//       js = d.createElement('script'); \n//       js.id = id;\n//       js.src = \"https://apis.google.com/js/platform.js?onload=googleSDKLoaded\";\n//       fjs?.parentNode?.insertBefore(js, fjs);\n//     }(document, 'script', 'google-jssdk'));\n//   }\n\n//   onGoogleSignIn(): void {\n//     this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n//   }\n//   externalLogin = () => {\n//     this.showError = false;\n//     this.AuthService.signInWithGoogle();\n//   }\n//   signInWithGoogle(): void {\n//     this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n//   }\n//   ngAfterViewInit(): void {\n//     this.renderGoogleSignInButton();\n//     this.googleAuthSDK();\n\n//   }\n\n//   renderGoogleSignInButton(): void {\n//     google.accounts.id.initialize({\n//       client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com',\n//       callback: (response:any) => this.onSignIn()\n//     });\n//     console.log(\"reach\")\n//     google.accounts.id.renderButton(this.googleSignInButton.nativeElement, {\n//       theme: 'outline',\n//       size: 'large',\n//       width: '240',\n//       height: '50',\n//       longtitle: true\n//     });\n//   }\n\n//   onSignIn(): void {\n//     // this.ngZone.run(() => {\n//       console.log(\"reach on\")\n\n//       // const idToken = response.credential;\n//       this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).catch(error => {\n//         console.error('Error signing in:', error);\n//       });\n//     // });\n//   }\n\n//   signOut(): void {\n//     this.authService.signOut().catch(error => {\n//       console.error('Error signing out:', error);\n//     });\n//   }\n\n//   ngOnDestroy(): void {\n//     if (this.userSubscription) {\n//       this.userSubscription.unsubscribe();\n//     }\n//   }\n// }\n"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script","externalDependencies":[]}