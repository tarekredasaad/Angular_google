{"ast":null,"code":"\"use strict\";\n\n// Copyright 2015 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar _asyncToGenerator = require(\"D:/graduation project/Graduation_Project-Dubbizel--main/Graduation_Project-Dubbizel--main/Dubbizel_Angular/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserRefreshClient = exports.USER_REFRESH_ACCOUNT_TYPE = void 0;\nconst oauth2client_1 = require(\"./oauth2client\");\nexports.USER_REFRESH_ACCOUNT_TYPE = 'authorized_user';\nclass UserRefreshClient extends oauth2client_1.OAuth2Client {\n  constructor(optionsOrClientId, clientSecret, refreshToken, eagerRefreshThresholdMillis, forceRefreshOnFailure) {\n    const opts = optionsOrClientId && typeof optionsOrClientId === 'object' ? optionsOrClientId : {\n      clientId: optionsOrClientId,\n      clientSecret,\n      refreshToken,\n      eagerRefreshThresholdMillis,\n      forceRefreshOnFailure\n    };\n    super({\n      clientId: opts.clientId,\n      clientSecret: opts.clientSecret,\n      eagerRefreshThresholdMillis: opts.eagerRefreshThresholdMillis,\n      forceRefreshOnFailure: opts.forceRefreshOnFailure\n    });\n    this._refreshToken = opts.refreshToken;\n    this.credentials.refresh_token = opts.refreshToken;\n  }\n  /**\n   * Refreshes the access token.\n   * @param refreshToken An ignored refreshToken..\n   * @param callback Optional callback.\n   */\n  refreshTokenNoCache(\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  refreshToken) {\n    var _superprop_getRefreshTokenNoCache = () => super.refreshTokenNoCache,\n      _this = this;\n    return _asyncToGenerator(function* () {\n      return _superprop_getRefreshTokenNoCache().call(_this, _this._refreshToken);\n    })();\n  }\n  /**\n   * Create a UserRefreshClient credentials instance using the given input\n   * options.\n   * @param json The input object.\n   */\n  fromJSON(json) {\n    if (!json) {\n      throw new Error('Must pass in a JSON object containing the user refresh token');\n    }\n    if (json.type !== 'authorized_user') {\n      throw new Error('The incoming JSON object does not have the \"authorized_user\" type');\n    }\n    if (!json.client_id) {\n      throw new Error('The incoming JSON object does not contain a client_id field');\n    }\n    if (!json.client_secret) {\n      throw new Error('The incoming JSON object does not contain a client_secret field');\n    }\n    if (!json.refresh_token) {\n      throw new Error('The incoming JSON object does not contain a refresh_token field');\n    }\n    this._clientId = json.client_id;\n    this._clientSecret = json.client_secret;\n    this._refreshToken = json.refresh_token;\n    this.credentials.refresh_token = json.refresh_token;\n    this.quotaProjectId = json.quota_project_id;\n  }\n  fromStream(inputStream, callback) {\n    if (callback) {\n      this.fromStreamAsync(inputStream).then(() => callback(), callback);\n    } else {\n      return this.fromStreamAsync(inputStream);\n    }\n  }\n  fromStreamAsync(inputStream) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        if (!inputStream) {\n          return reject(new Error('Must pass in a stream containing the user refresh token.'));\n        }\n        let s = '';\n        inputStream.setEncoding('utf8').on('error', reject).on('data', chunk => s += chunk).on('end', () => {\n          try {\n            const data = JSON.parse(s);\n            _this2.fromJSON(data);\n            return resolve();\n          } catch (err) {\n            return reject(err);\n          }\n        });\n      });\n    })();\n  }\n}\nexports.UserRefreshClient = UserRefreshClient;","map":{"version":3,"names":["_asyncToGenerator","require","default","Object","defineProperty","exports","value","UserRefreshClient","USER_REFRESH_ACCOUNT_TYPE","oauth2client_1","OAuth2Client","constructor","optionsOrClientId","clientSecret","refreshToken","eagerRefreshThresholdMillis","forceRefreshOnFailure","opts","clientId","_refreshToken","credentials","refresh_token","refreshTokenNoCache","_superprop_getRefreshTokenNoCache","_this","call","fromJSON","json","Error","type","client_id","client_secret","_clientId","_clientSecret","quotaProjectId","quota_project_id","fromStream","inputStream","callback","fromStreamAsync","then","_this2","Promise","resolve","reject","s","setEncoding","on","chunk","data","JSON","parse","err"],"sources":["D:/graduation project/Graduation_Project-Dubbizel--main/Graduation_Project-Dubbizel--main/Dubbizel_Angular/node_modules/google-auth-library/build/src/auth/refreshclient.js"],"sourcesContent":["\"use strict\";\n// Copyright 2015 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserRefreshClient = exports.USER_REFRESH_ACCOUNT_TYPE = void 0;\nconst oauth2client_1 = require(\"./oauth2client\");\nexports.USER_REFRESH_ACCOUNT_TYPE = 'authorized_user';\nclass UserRefreshClient extends oauth2client_1.OAuth2Client {\n    constructor(optionsOrClientId, clientSecret, refreshToken, eagerRefreshThresholdMillis, forceRefreshOnFailure) {\n        const opts = optionsOrClientId && typeof optionsOrClientId === 'object'\n            ? optionsOrClientId\n            : {\n                clientId: optionsOrClientId,\n                clientSecret,\n                refreshToken,\n                eagerRefreshThresholdMillis,\n                forceRefreshOnFailure,\n            };\n        super({\n            clientId: opts.clientId,\n            clientSecret: opts.clientSecret,\n            eagerRefreshThresholdMillis: opts.eagerRefreshThresholdMillis,\n            forceRefreshOnFailure: opts.forceRefreshOnFailure,\n        });\n        this._refreshToken = opts.refreshToken;\n        this.credentials.refresh_token = opts.refreshToken;\n    }\n    /**\n     * Refreshes the access token.\n     * @param refreshToken An ignored refreshToken..\n     * @param callback Optional callback.\n     */\n    async refreshTokenNoCache(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refreshToken) {\n        return super.refreshTokenNoCache(this._refreshToken);\n    }\n    /**\n     * Create a UserRefreshClient credentials instance using the given input\n     * options.\n     * @param json The input object.\n     */\n    fromJSON(json) {\n        if (!json) {\n            throw new Error('Must pass in a JSON object containing the user refresh token');\n        }\n        if (json.type !== 'authorized_user') {\n            throw new Error('The incoming JSON object does not have the \"authorized_user\" type');\n        }\n        if (!json.client_id) {\n            throw new Error('The incoming JSON object does not contain a client_id field');\n        }\n        if (!json.client_secret) {\n            throw new Error('The incoming JSON object does not contain a client_secret field');\n        }\n        if (!json.refresh_token) {\n            throw new Error('The incoming JSON object does not contain a refresh_token field');\n        }\n        this._clientId = json.client_id;\n        this._clientSecret = json.client_secret;\n        this._refreshToken = json.refresh_token;\n        this.credentials.refresh_token = json.refresh_token;\n        this.quotaProjectId = json.quota_project_id;\n    }\n    fromStream(inputStream, callback) {\n        if (callback) {\n            this.fromStreamAsync(inputStream).then(() => callback(), callback);\n        }\n        else {\n            return this.fromStreamAsync(inputStream);\n        }\n    }\n    async fromStreamAsync(inputStream) {\n        return new Promise((resolve, reject) => {\n            if (!inputStream) {\n                return reject(new Error('Must pass in a stream containing the user refresh token.'));\n            }\n            let s = '';\n            inputStream\n                .setEncoding('utf8')\n                .on('error', reject)\n                .on('data', chunk => (s += chunk))\n                .on('end', () => {\n                try {\n                    const data = JSON.parse(s);\n                    this.fromJSON(data);\n                    return resolve();\n                }\n                catch (err) {\n                    return reject(err);\n                }\n            });\n        });\n    }\n}\nexports.UserRefreshClient = UserRefreshClient;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}