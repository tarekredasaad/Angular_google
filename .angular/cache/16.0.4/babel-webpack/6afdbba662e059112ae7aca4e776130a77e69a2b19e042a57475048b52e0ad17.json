{"ast":null,"code":"\"use strict\";\n\n// Copyright 2018 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar _asyncToGenerator = require(\"D:/graduation project/Graduation_Project-Dubbizel--main/Graduation_Project-Dubbizel--main/Dubbizel_Angular/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Gaxios = void 0;\nconst extend_1 = __importDefault(require(\"extend\"));\nconst https_1 = require(\"https\");\nconst node_fetch_1 = __importDefault(require(\"node-fetch\"));\nconst querystring_1 = __importDefault(require(\"querystring\"));\nconst is_stream_1 = __importDefault(require(\"is-stream\"));\nconst url_1 = require(\"url\");\nconst common_1 = require(\"./common\");\nconst retry_1 = require(\"./retry\");\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fetch = hasFetch() ? window.fetch : node_fetch_1.default;\nfunction hasWindow() {\n  return typeof window !== 'undefined' && !!window;\n}\nfunction hasFetch() {\n  return hasWindow() && !!window.fetch;\n}\nfunction hasBuffer() {\n  return typeof Buffer !== 'undefined';\n}\nfunction hasHeader(options, header) {\n  return !!getHeader(options, header);\n}\nfunction getHeader(options, header) {\n  header = header.toLowerCase();\n  for (const key of Object.keys((options === null || options === void 0 ? void 0 : options.headers) || {})) {\n    if (header === key.toLowerCase()) {\n      return options.headers[key];\n    }\n  }\n  return undefined;\n}\nlet HttpsProxyAgent;\nfunction loadProxy() {\n  var _a, _b, _c, _d;\n  const proxy = ((_a = process === null || process === void 0 ? void 0 : process.env) === null || _a === void 0 ? void 0 : _a.HTTPS_PROXY) || ((_b = process === null || process === void 0 ? void 0 : process.env) === null || _b === void 0 ? void 0 : _b.https_proxy) || ((_c = process === null || process === void 0 ? void 0 : process.env) === null || _c === void 0 ? void 0 : _c.HTTP_PROXY) || ((_d = process === null || process === void 0 ? void 0 : process.env) === null || _d === void 0 ? void 0 : _d.http_proxy);\n  if (proxy) {\n    HttpsProxyAgent = require('https-proxy-agent');\n  }\n  return proxy;\n}\nloadProxy();\nfunction skipProxy(url) {\n  var _a;\n  const noProxyEnv = (_a = process.env.NO_PROXY) !== null && _a !== void 0 ? _a : process.env.no_proxy;\n  if (!noProxyEnv) {\n    return false;\n  }\n  const noProxyUrls = noProxyEnv.split(',');\n  const parsedURL = new url_1.URL(url);\n  return !!noProxyUrls.find(url => {\n    if (url.startsWith('*.') || url.startsWith('.')) {\n      url = url.replace(/^\\*\\./, '.');\n      return parsedURL.hostname.endsWith(url);\n    } else {\n      return url === parsedURL.origin || url === parsedURL.hostname;\n    }\n  });\n}\n// Figure out if we should be using a proxy. Only if it's required, load\n// the https-proxy-agent module as it adds startup cost.\nfunction getProxy(url) {\n  // If there is a match between the no_proxy env variables and the url, then do not proxy\n  if (skipProxy(url)) {\n    return undefined;\n    // If there is not a match between the no_proxy env variables and the url, check to see if there should be a proxy\n  } else {\n    return loadProxy();\n  }\n}\nclass Gaxios {\n  /**\n   * The Gaxios class is responsible for making HTTP requests.\n   * @param defaults The default set of options to be used for this instance.\n   */\n  constructor(defaults) {\n    this.agentCache = new Map();\n    this.defaults = defaults || {};\n  }\n  /**\n   * Perform an HTTP request with the given options.\n   * @param opts Set of HTTP options that will be used for this HTTP request.\n   */\n  request(opts = {}) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      opts = _this.validateOpts(opts);\n      return _this._request(opts);\n    })();\n  }\n  _defaultAdapter(opts) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const fetchImpl = opts.fetchImplementation || fetch;\n      const res = yield fetchImpl(opts.url, opts);\n      const data = yield _this2.getResponseData(opts, res);\n      return _this2.translateResponse(opts, res, data);\n    })();\n  }\n  /**\n   * Internal, retryable version of the `request` method.\n   * @param opts Set of HTTP options that will be used for this HTTP request.\n   */\n  _request(opts = {}) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        let translatedResponse;\n        if (opts.adapter) {\n          translatedResponse = yield opts.adapter(opts, _this3._defaultAdapter.bind(_this3));\n        } else {\n          translatedResponse = yield _this3._defaultAdapter(opts);\n        }\n        if (!opts.validateStatus(translatedResponse.status)) {\n          throw new common_1.GaxiosError(`Request failed with status code ${translatedResponse.status}`, opts, translatedResponse);\n        }\n        return translatedResponse;\n      } catch (e) {\n        const err = e;\n        err.config = opts;\n        const {\n          shouldRetry,\n          config\n        } = yield (0, retry_1.getRetryConfig)(err);\n        if (shouldRetry && config) {\n          err.config.retryConfig.currentRetryAttempt = config.retryConfig.currentRetryAttempt;\n          return _this3._request(err.config);\n        }\n        throw err;\n      }\n    })();\n  }\n  getResponseData(opts, res) {\n    return _asyncToGenerator(function* () {\n      switch (opts.responseType) {\n        case 'stream':\n          return res.body;\n        case 'json':\n          {\n            let data = yield res.text();\n            try {\n              data = JSON.parse(data);\n            } catch (_a) {\n              // continue\n            }\n            return data;\n          }\n        case 'arraybuffer':\n          return res.arrayBuffer();\n        case 'blob':\n          return res.blob();\n        default:\n          return res.text();\n      }\n    })();\n  }\n  /**\n   * Validates the options, and merges them with defaults.\n   * @param opts The original options passed from the client.\n   */\n  validateOpts(options) {\n    const opts = (0, extend_1.default)(true, {}, this.defaults, options);\n    if (!opts.url) {\n      throw new Error('URL is required.');\n    }\n    // baseUrl has been deprecated, remove in 2.0\n    const baseUrl = opts.baseUrl || opts.baseURL;\n    if (baseUrl) {\n      opts.url = baseUrl + opts.url;\n    }\n    opts.paramsSerializer = opts.paramsSerializer || this.paramsSerializer;\n    if (opts.params && Object.keys(opts.params).length > 0) {\n      let additionalQueryParams = opts.paramsSerializer(opts.params);\n      if (additionalQueryParams.startsWith('?')) {\n        additionalQueryParams = additionalQueryParams.slice(1);\n      }\n      const prefix = opts.url.includes('?') ? '&' : '?';\n      opts.url = opts.url + prefix + additionalQueryParams;\n    }\n    if (typeof options.maxContentLength === 'number') {\n      opts.size = options.maxContentLength;\n    }\n    if (typeof options.maxRedirects === 'number') {\n      opts.follow = options.maxRedirects;\n    }\n    opts.headers = opts.headers || {};\n    if (opts.data) {\n      const isFormData = typeof FormData === 'undefined' ? false : (opts === null || opts === void 0 ? void 0 : opts.data) instanceof FormData;\n      if (is_stream_1.default.readable(opts.data)) {\n        opts.body = opts.data;\n      } else if (hasBuffer() && Buffer.isBuffer(opts.data)) {\n        // Do not attempt to JSON.stringify() a Buffer:\n        opts.body = opts.data;\n        if (!hasHeader(opts, 'Content-Type')) {\n          opts.headers['Content-Type'] = 'application/json';\n        }\n      } else if (typeof opts.data === 'object') {\n        // If www-form-urlencoded content type has been set, but data is\n        // provided as an object, serialize the content using querystring:\n        if (!isFormData) {\n          if (getHeader(opts, 'content-type') === 'application/x-www-form-urlencoded') {\n            opts.body = opts.paramsSerializer(opts.data);\n          } else {\n            // } else if (!(opts.data instanceof FormData)) {\n            if (!hasHeader(opts, 'Content-Type')) {\n              opts.headers['Content-Type'] = 'application/json';\n            }\n            opts.body = JSON.stringify(opts.data);\n          }\n        }\n      } else {\n        opts.body = opts.data;\n      }\n    }\n    opts.validateStatus = opts.validateStatus || this.validateStatus;\n    opts.responseType = opts.responseType || 'json';\n    if (!opts.headers['Accept'] && opts.responseType === 'json') {\n      opts.headers['Accept'] = 'application/json';\n    }\n    opts.method = opts.method || 'GET';\n    const proxy = getProxy(opts.url);\n    if (proxy) {\n      if (this.agentCache.has(proxy)) {\n        opts.agent = this.agentCache.get(proxy);\n      } else {\n        // Proxy is being used in conjunction with mTLS.\n        if (opts.cert && opts.key) {\n          const parsedURL = new url_1.URL(proxy);\n          opts.agent = new HttpsProxyAgent({\n            port: parsedURL.port,\n            host: parsedURL.host,\n            protocol: parsedURL.protocol,\n            cert: opts.cert,\n            key: opts.key\n          });\n        } else {\n          opts.agent = new HttpsProxyAgent(proxy);\n        }\n        this.agentCache.set(proxy, opts.agent);\n      }\n    } else if (opts.cert && opts.key) {\n      // Configure client for mTLS:\n      if (this.agentCache.has(opts.key)) {\n        opts.agent = this.agentCache.get(opts.key);\n      } else {\n        opts.agent = new https_1.Agent({\n          cert: opts.cert,\n          key: opts.key\n        });\n        this.agentCache.set(opts.key, opts.agent);\n      }\n    }\n    return opts;\n  }\n  /**\n   * By default, throw for any non-2xx status code\n   * @param status status code from the HTTP response\n   */\n  validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n  /**\n   * Encode a set of key/value pars into a querystring format (?foo=bar&baz=boo)\n   * @param params key value pars to encode\n   */\n  paramsSerializer(params) {\n    return querystring_1.default.stringify(params);\n  }\n  translateResponse(opts, res, data) {\n    // headers need to be converted from a map to an obj\n    const headers = {};\n    res.headers.forEach((value, key) => {\n      headers[key] = value;\n    });\n    return {\n      config: opts,\n      data: data,\n      headers,\n      status: res.status,\n      statusText: res.statusText,\n      // XMLHttpRequestLike\n      request: {\n        responseURL: res.url\n      }\n    };\n  }\n}\nexports.Gaxios = Gaxios;","map":{"version":3,"names":["_asyncToGenerator","require","default","__importDefault","mod","__esModule","Object","defineProperty","exports","value","Gaxios","extend_1","https_1","node_fetch_1","querystring_1","is_stream_1","url_1","common_1","retry_1","fetch","hasFetch","window","hasWindow","hasBuffer","Buffer","hasHeader","options","header","getHeader","toLowerCase","key","keys","headers","undefined","HttpsProxyAgent","loadProxy","_a","_b","_c","_d","proxy","process","env","HTTPS_PROXY","https_proxy","HTTP_PROXY","http_proxy","skipProxy","url","noProxyEnv","NO_PROXY","no_proxy","noProxyUrls","split","parsedURL","URL","find","startsWith","replace","hostname","endsWith","origin","getProxy","constructor","defaults","agentCache","Map","request","opts","_this","validateOpts","_request","_defaultAdapter","_this2","fetchImpl","fetchImplementation","res","data","getResponseData","translateResponse","_this3","translatedResponse","adapter","bind","validateStatus","status","GaxiosError","e","err","config","shouldRetry","getRetryConfig","retryConfig","currentRetryAttempt","responseType","body","text","JSON","parse","arrayBuffer","blob","Error","baseUrl","baseURL","paramsSerializer","params","length","additionalQueryParams","slice","prefix","includes","maxContentLength","size","maxRedirects","follow","isFormData","FormData","readable","isBuffer","stringify","method","has","agent","get","cert","port","host","protocol","set","Agent","forEach","statusText","responseURL"],"sources":["D:/graduation project/Graduation_Project-Dubbizel--main/Graduation_Project-Dubbizel--main/Dubbizel_Angular/node_modules/gaxios/build/src/gaxios.js"],"sourcesContent":["\"use strict\";\n// Copyright 2018 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Gaxios = void 0;\nconst extend_1 = __importDefault(require(\"extend\"));\nconst https_1 = require(\"https\");\nconst node_fetch_1 = __importDefault(require(\"node-fetch\"));\nconst querystring_1 = __importDefault(require(\"querystring\"));\nconst is_stream_1 = __importDefault(require(\"is-stream\"));\nconst url_1 = require(\"url\");\nconst common_1 = require(\"./common\");\nconst retry_1 = require(\"./retry\");\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fetch = hasFetch() ? window.fetch : node_fetch_1.default;\nfunction hasWindow() {\n    return typeof window !== 'undefined' && !!window;\n}\nfunction hasFetch() {\n    return hasWindow() && !!window.fetch;\n}\nfunction hasBuffer() {\n    return typeof Buffer !== 'undefined';\n}\nfunction hasHeader(options, header) {\n    return !!getHeader(options, header);\n}\nfunction getHeader(options, header) {\n    header = header.toLowerCase();\n    for (const key of Object.keys((options === null || options === void 0 ? void 0 : options.headers) || {})) {\n        if (header === key.toLowerCase()) {\n            return options.headers[key];\n        }\n    }\n    return undefined;\n}\nlet HttpsProxyAgent;\nfunction loadProxy() {\n    var _a, _b, _c, _d;\n    const proxy = ((_a = process === null || process === void 0 ? void 0 : process.env) === null || _a === void 0 ? void 0 : _a.HTTPS_PROXY) ||\n        ((_b = process === null || process === void 0 ? void 0 : process.env) === null || _b === void 0 ? void 0 : _b.https_proxy) ||\n        ((_c = process === null || process === void 0 ? void 0 : process.env) === null || _c === void 0 ? void 0 : _c.HTTP_PROXY) ||\n        ((_d = process === null || process === void 0 ? void 0 : process.env) === null || _d === void 0 ? void 0 : _d.http_proxy);\n    if (proxy) {\n        HttpsProxyAgent = require('https-proxy-agent');\n    }\n    return proxy;\n}\nloadProxy();\nfunction skipProxy(url) {\n    var _a;\n    const noProxyEnv = (_a = process.env.NO_PROXY) !== null && _a !== void 0 ? _a : process.env.no_proxy;\n    if (!noProxyEnv) {\n        return false;\n    }\n    const noProxyUrls = noProxyEnv.split(',');\n    const parsedURL = new url_1.URL(url);\n    return !!noProxyUrls.find(url => {\n        if (url.startsWith('*.') || url.startsWith('.')) {\n            url = url.replace(/^\\*\\./, '.');\n            return parsedURL.hostname.endsWith(url);\n        }\n        else {\n            return url === parsedURL.origin || url === parsedURL.hostname;\n        }\n    });\n}\n// Figure out if we should be using a proxy. Only if it's required, load\n// the https-proxy-agent module as it adds startup cost.\nfunction getProxy(url) {\n    // If there is a match between the no_proxy env variables and the url, then do not proxy\n    if (skipProxy(url)) {\n        return undefined;\n        // If there is not a match between the no_proxy env variables and the url, check to see if there should be a proxy\n    }\n    else {\n        return loadProxy();\n    }\n}\nclass Gaxios {\n    /**\n     * The Gaxios class is responsible for making HTTP requests.\n     * @param defaults The default set of options to be used for this instance.\n     */\n    constructor(defaults) {\n        this.agentCache = new Map();\n        this.defaults = defaults || {};\n    }\n    /**\n     * Perform an HTTP request with the given options.\n     * @param opts Set of HTTP options that will be used for this HTTP request.\n     */\n    async request(opts = {}) {\n        opts = this.validateOpts(opts);\n        return this._request(opts);\n    }\n    async _defaultAdapter(opts) {\n        const fetchImpl = opts.fetchImplementation || fetch;\n        const res = (await fetchImpl(opts.url, opts));\n        const data = await this.getResponseData(opts, res);\n        return this.translateResponse(opts, res, data);\n    }\n    /**\n     * Internal, retryable version of the `request` method.\n     * @param opts Set of HTTP options that will be used for this HTTP request.\n     */\n    async _request(opts = {}) {\n        try {\n            let translatedResponse;\n            if (opts.adapter) {\n                translatedResponse = await opts.adapter(opts, this._defaultAdapter.bind(this));\n            }\n            else {\n                translatedResponse = await this._defaultAdapter(opts);\n            }\n            if (!opts.validateStatus(translatedResponse.status)) {\n                throw new common_1.GaxiosError(`Request failed with status code ${translatedResponse.status}`, opts, translatedResponse);\n            }\n            return translatedResponse;\n        }\n        catch (e) {\n            const err = e;\n            err.config = opts;\n            const { shouldRetry, config } = await (0, retry_1.getRetryConfig)(err);\n            if (shouldRetry && config) {\n                err.config.retryConfig.currentRetryAttempt =\n                    config.retryConfig.currentRetryAttempt;\n                return this._request(err.config);\n            }\n            throw err;\n        }\n    }\n    async getResponseData(opts, res) {\n        switch (opts.responseType) {\n            case 'stream':\n                return res.body;\n            case 'json': {\n                let data = await res.text();\n                try {\n                    data = JSON.parse(data);\n                }\n                catch (_a) {\n                    // continue\n                }\n                return data;\n            }\n            case 'arraybuffer':\n                return res.arrayBuffer();\n            case 'blob':\n                return res.blob();\n            default:\n                return res.text();\n        }\n    }\n    /**\n     * Validates the options, and merges them with defaults.\n     * @param opts The original options passed from the client.\n     */\n    validateOpts(options) {\n        const opts = (0, extend_1.default)(true, {}, this.defaults, options);\n        if (!opts.url) {\n            throw new Error('URL is required.');\n        }\n        // baseUrl has been deprecated, remove in 2.0\n        const baseUrl = opts.baseUrl || opts.baseURL;\n        if (baseUrl) {\n            opts.url = baseUrl + opts.url;\n        }\n        opts.paramsSerializer = opts.paramsSerializer || this.paramsSerializer;\n        if (opts.params && Object.keys(opts.params).length > 0) {\n            let additionalQueryParams = opts.paramsSerializer(opts.params);\n            if (additionalQueryParams.startsWith('?')) {\n                additionalQueryParams = additionalQueryParams.slice(1);\n            }\n            const prefix = opts.url.includes('?') ? '&' : '?';\n            opts.url = opts.url + prefix + additionalQueryParams;\n        }\n        if (typeof options.maxContentLength === 'number') {\n            opts.size = options.maxContentLength;\n        }\n        if (typeof options.maxRedirects === 'number') {\n            opts.follow = options.maxRedirects;\n        }\n        opts.headers = opts.headers || {};\n        if (opts.data) {\n            const isFormData = typeof FormData === 'undefined'\n                ? false\n                : (opts === null || opts === void 0 ? void 0 : opts.data) instanceof FormData;\n            if (is_stream_1.default.readable(opts.data)) {\n                opts.body = opts.data;\n            }\n            else if (hasBuffer() && Buffer.isBuffer(opts.data)) {\n                // Do not attempt to JSON.stringify() a Buffer:\n                opts.body = opts.data;\n                if (!hasHeader(opts, 'Content-Type')) {\n                    opts.headers['Content-Type'] = 'application/json';\n                }\n            }\n            else if (typeof opts.data === 'object') {\n                // If www-form-urlencoded content type has been set, but data is\n                // provided as an object, serialize the content using querystring:\n                if (!isFormData) {\n                    if (getHeader(opts, 'content-type') ===\n                        'application/x-www-form-urlencoded') {\n                        opts.body = opts.paramsSerializer(opts.data);\n                    }\n                    else {\n                        // } else if (!(opts.data instanceof FormData)) {\n                        if (!hasHeader(opts, 'Content-Type')) {\n                            opts.headers['Content-Type'] = 'application/json';\n                        }\n                        opts.body = JSON.stringify(opts.data);\n                    }\n                }\n            }\n            else {\n                opts.body = opts.data;\n            }\n        }\n        opts.validateStatus = opts.validateStatus || this.validateStatus;\n        opts.responseType = opts.responseType || 'json';\n        if (!opts.headers['Accept'] && opts.responseType === 'json') {\n            opts.headers['Accept'] = 'application/json';\n        }\n        opts.method = opts.method || 'GET';\n        const proxy = getProxy(opts.url);\n        if (proxy) {\n            if (this.agentCache.has(proxy)) {\n                opts.agent = this.agentCache.get(proxy);\n            }\n            else {\n                // Proxy is being used in conjunction with mTLS.\n                if (opts.cert && opts.key) {\n                    const parsedURL = new url_1.URL(proxy);\n                    opts.agent = new HttpsProxyAgent({\n                        port: parsedURL.port,\n                        host: parsedURL.host,\n                        protocol: parsedURL.protocol,\n                        cert: opts.cert,\n                        key: opts.key,\n                    });\n                }\n                else {\n                    opts.agent = new HttpsProxyAgent(proxy);\n                }\n                this.agentCache.set(proxy, opts.agent);\n            }\n        }\n        else if (opts.cert && opts.key) {\n            // Configure client for mTLS:\n            if (this.agentCache.has(opts.key)) {\n                opts.agent = this.agentCache.get(opts.key);\n            }\n            else {\n                opts.agent = new https_1.Agent({\n                    cert: opts.cert,\n                    key: opts.key,\n                });\n                this.agentCache.set(opts.key, opts.agent);\n            }\n        }\n        return opts;\n    }\n    /**\n     * By default, throw for any non-2xx status code\n     * @param status status code from the HTTP response\n     */\n    validateStatus(status) {\n        return status >= 200 && status < 300;\n    }\n    /**\n     * Encode a set of key/value pars into a querystring format (?foo=bar&baz=boo)\n     * @param params key value pars to encode\n     */\n    paramsSerializer(params) {\n        return querystring_1.default.stringify(params);\n    }\n    translateResponse(opts, res, data) {\n        // headers need to be converted from a map to an obj\n        const headers = {};\n        res.headers.forEach((value, key) => {\n            headers[key] = value;\n        });\n        return {\n            config: opts,\n            data: data,\n            headers,\n            status: res.status,\n            statusText: res.statusText,\n            // XMLHttpRequestLike\n            request: {\n                responseURL: res.url,\n            },\n        };\n    }\n}\nexports.Gaxios = Gaxios;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}