{"ast":null,"code":"import { GoogleLoginProvider } from '@abacritt/angularx-social-login';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Service/auth.service\";\nimport * as i2 from \"@abacritt/angularx-social-login\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"googleSignInButton\"];\nconst _c1 = [\"loginRef\"];\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"img\", 14);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_9_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.signOut());\n    });\n    i0.ɵɵtext(5, \"Sign out\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r0.user.photoUrl, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r0.user.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.user.name);\n  }\n}\nfunction LoginComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_10_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onSignIn());\n    });\n    i0.ɵɵtext(2, \"Google\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 16);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_10_Template_div_click_3_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onSignIn2());\n    });\n    i0.ɵɵtext(4, \"sign in\");\n    i0.ɵɵelementEnd()();\n  }\n}\nlet LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(AuthService, authService, ngZone) {\n      this.AuthService = AuthService;\n      this.authService = authService;\n      this.ngZone = ngZone;\n      this.externalLogin = () => {\n        this.showError = false;\n        this.AuthService.signInWithGoogle();\n      };\n      // this.AuthService.fetchData().subscribe(data => {\n      //   console.log(data);\n      // });\n    }\n\n    ngOnInit() {\n      this.authService.authState.subscribe(user => {\n        this.user = user;\n      });\n      gapi.load('auth2', () => {\n        gapi.auth2.init({\n          client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com'\n        });\n      });\n      console.log(this.user);\n      setInterval(() => {\n        if (this.AuthService.user != null) {\n          console.log(\"good\");\n          console.log(this.AuthService.externalAuth);\n          console.log(this.AuthService.user);\n          this.AuthService.sendUserData(this.AuthService.user).subscribe({\n            next: data => console.log(data),\n            error: err => console.log(err)\n          });\n        }\n      }, 3000);\n    }\n    onSignIn() {\n      const auth2 = gapi.auth2.getAuthInstance();\n      auth2.signIn().then(googleUser => {\n        this.ngZone.run(() => {\n          const idToken = googleUser.getAuthResponse().id_token;\n          this.authService.signIn(GoogleLoginProvider.PROVIDER_ID, {\n            idToken\n          }).catch(error => {\n            console.error('Error signing in:', error);\n          });\n        });\n      });\n    }\n    callLoginButton() {\n      this.auth2.attachClickHandler(this.loginElement.nativeElement, {}, googleAuthUser => {\n        let profile = googleAuthUser.getBasicProfile();\n        console.log('Token || ' + googleAuthUser.getAuthResponse().id_token);\n        console.log('ID: ' + profile.getId());\n        console.log('Name: ' + profile.getName());\n        console.log('Image URL: ' + profile.getImageUrl());\n        console.log('Email: ' + profile.getEmail());\n        /* Write Your Code Here */\n      }, error => {\n        alert(JSON.stringify(error, undefined, 2));\n      });\n    }\n    googleAuthSDK() {\n      window['googleSDKLoaded'] = () => {\n        window['gapi'].load('auth2', () => {\n          this.auth2 = window['gapi'].auth2.init({\n            client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com',\n            cookiepolicy: 'single_host_origin',\n            scope: 'profile email'\n          });\n          this.callLoginButton();\n        });\n      };\n      (function (d, s, id) {\n        var js,\n          fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {\n          return;\n        }\n        js = d.createElement('script');\n        js.id = id;\n        js.src = \"https://apis.google.com/js/platform.js?onload=googleSDKLoaded\";\n        fjs?.parentNode?.insertBefore(js, fjs);\n      })(document, 'script', 'google-jssdk');\n    }\n    onGoogleSignIn() {\n      this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n    }\n    signInWithGoogle() {\n      this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n    }\n    ngAfterViewInit() {\n      this.renderGoogleSignInButton();\n      this.googleAuthSDK();\n    }\n    renderGoogleSignInButton() {\n      google.accounts.id.initialize({\n        client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com',\n        callback: response => this.onSignIn2()\n      });\n      console.log(\"reach\");\n      google.accounts.id.renderButton(this.googleSignInButton.nativeElement, {\n        theme: 'outline',\n        size: 'large',\n        width: '240',\n        height: '50',\n        longtitle: true\n      });\n    }\n    onSignIn2() {\n      // this.ngZone.run(() => {\n      console.log(\"reach on\");\n      // const idToken = response.credential;\n      this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).catch(error => {\n        console.error('Error signing in:', error);\n      });\n      // });\n    }\n\n    signOut() {\n      this.authService.signOut().catch(error => {\n        console.error('Error signing out:', error);\n      });\n    }\n    ngOnDestroy() {\n      if (this.userSubscription) {\n        this.userSubscription.unsubscribe();\n      }\n    }\n  }\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.SocialAuthService), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    viewQuery: function LoginComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.googleSignInButton = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loginElement = _t.first);\n      }\n    },\n    decls: 25,\n    vars: 2,\n    consts: [[1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [3, \"click\"], [4, \"ngIf\"], [1, \"container\", \"mt-5\"], [1, \"row\", \"mt-5\"], [1, \"col-md-4\", \"mt-2\", \"m-auto\"], [1, \"btn\", \"btn-danger\"], [\"loginRef\", \"\"], [\"data-type\", \"standard\", \"data-size\", \"large\", \"data-theme\", \"outline\", \"data-text\", \"sign_in_with goooogle\", \"data-shape\", \"rectangular\", \"data-callback\", \"OnSuccess\", \"data-logo_alignment\", \"left\", 1, \"g_id_signin\"], [\"id\", \"g_id_onload\", \"data-client_id\", \"400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com\", \"data-context\", \"signin\", \"data-ux_mode\", \"redirect\", \"data-login_uri\", \"http://localhost:7189/api/Account/ExternalLogin\", \"data-auto_select\", \"true\", \"data-auto_prompt\", \"false\", \"data-itp_support\", \"true\"], [\"id\", \"buttonDiv\"], [\"data-locale\", \"fr\", 1, \"g_id_signin\"], [\"width\", \"50\", \"height\", \"50\", 3, \"src\", \"alt\"], [\"type\", \"button\", 1, \"btn\", \"btn-info\", 3, \"click\"], [\"data-onsuccess\", \"onSignIn\", 1, \"g-signin2\", 3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(4, \" ... \");\n        i0.ɵɵelement(5, \"hr\");\n        i0.ɵɵelementStart(6, \"div\")(7, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_7_listener() {\n          return ctx.onSignIn();\n        });\n        i0.ɵɵtext(8, \"Sign in with Google\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 6, 3, \"div\", 4);\n        i0.ɵɵtemplate(10, LoginComponent_div_10_Template, 5, 0, \"div\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 5)(12, \"h1\");\n        i0.ɵɵtext(13, \"Google Login with Angular - ItSolutionStuff.com\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 6)(15, \"div\", 7)(16, \"button\", 8, 9);\n        i0.ɵɵtext(18, \" Login with Google \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(19, \"div\", 10)(20, \"div\", 11)(21, \"div\", 12);\n        i0.ɵɵtext(22, \"\\n...\\n\");\n        i0.ɵɵelement(23, \"div\", 13);\n        i0.ɵɵtext(24, \"\\n...\\n\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.user);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.user);\n      }\n    },\n    dependencies: [i3.NgIf]\n  });\n  return LoginComponent;\n})();\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}