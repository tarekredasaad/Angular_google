{"ast":null,"code":"import { GoogleLoginProvider } from '@abacritt/angularx-social-login';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Service/auth.service\";\nimport * as i2 from \"@abacritt/angularx-social-login\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"googleSignInButton\"];\nconst _c1 = [\"loginRef\"];\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"img\", 14);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_9_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.signOut());\n    });\n    i0.ɵɵtext(5, \"Sign out\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r0.user.photoUrl, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r0.user.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.user.name);\n  }\n}\nfunction LoginComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_10_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.externalLogin());\n    });\n    i0.ɵɵtext(2, \"Google\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 16);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_10_Template_div_click_3_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onSignIn());\n    });\n    i0.ɵɵtext(4, \"sign in\");\n    i0.ɵɵelementEnd()();\n  }\n}\nclass LoginComponent {\n  constructor(AuthService, authService, ngZone) {\n    this.AuthService = AuthService;\n    this.authService = authService;\n    this.ngZone = ngZone;\n    this.externalLogin = () => {\n      this.showError = false;\n      this.AuthService.signInWithGoogle();\n    };\n    // this.AuthService.fetchData().subscribe(data => {\n    //   console.log(data);\n    // });\n  }\n\n  ngOnInit() {\n    this.authService.authState.subscribe(user => {\n      this.user = user;\n    });\n    gapi.load('auth2', () => {\n      gapi.auth2.init({\n        client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com'\n      });\n    });\n    console.log(this.user);\n    setInterval(() => {\n      if (this.AuthService.user != null) {\n        console.log(\"good\");\n        console.log(this.AuthService.externalAuth);\n        console.log(this.AuthService.user);\n        this.AuthService.sendUserData(this.AuthService.user).subscribe({\n          next: data => console.log(data),\n          error: err => console.log(err)\n        });\n      }\n    }, 3000);\n  }\n  onSignIn() {\n    const auth2 = gapi.auth2.getAuthInstance();\n    auth2.signIn().then(googleUser => {\n      this.ngZone.run(() => {\n        const idToken = googleUser.getAuthResponse().id_token;\n        this.authService.signIn(GoogleLoginProvider.PROVIDER_ID, {\n          idToken\n        }).catch(error => {\n          console.error('Error signing in:', error);\n        });\n      });\n    });\n  }\n  callLoginButton() {\n    this.auth2.attachClickHandler(this.loginElement.nativeElement, {}, googleAuthUser => {\n      let profile = googleAuthUser.getBasicProfile();\n      console.log('Token || ' + googleAuthUser.getAuthResponse().id_token);\n      console.log('ID: ' + profile.getId());\n      console.log('Name: ' + profile.getName());\n      console.log('Image URL: ' + profile.getImageUrl());\n      console.log('Email: ' + profile.getEmail());\n      /* Write Your Code Here */\n    }, error => {\n      alert(JSON.stringify(error, undefined, 2));\n    });\n  }\n  googleAuthSDK() {\n    window['googleSDKLoaded'] = () => {\n      window['gapi'].load('auth2', () => {\n        this.auth2 = window['gapi'].auth2.init({\n          client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com',\n          cookiepolicy: 'single_host_origin',\n          scope: 'profile email'\n        });\n        this.callLoginButton();\n      });\n    };\n    (function (d, s, id) {\n      var js,\n        fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) {\n        return;\n      }\n      js = d.createElement('script');\n      js.id = id;\n      js.src = \"https://apis.google.com/js/platform.js?onload=googleSDKLoaded\";\n      fjs?.parentNode?.insertBefore(js, fjs);\n    })(document, 'script', 'google-jssdk');\n  }\n  onGoogleSignIn() {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  }\n  signInWithGoogle() {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  }\n  ngAfterViewInit() {\n    this.renderGoogleSignInButton();\n    this.googleAuthSDK();\n  }\n  renderGoogleSignInButton() {\n    google.accounts.id.initialize({\n      client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com',\n      callback: response => this.onSignIn2()\n    });\n    console.log(\"reach\");\n    google.accounts.id.renderButton(this.googleSignInButton.nativeElement, {\n      theme: 'outline',\n      size: 'large',\n      width: '240',\n      height: '50',\n      longtitle: true\n    });\n  }\n  onSignIn2() {\n    // this.ngZone.run(() => {\n    console.log(\"reach on\");\n    // const idToken = response.credential;\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).catch(error => {\n      console.error('Error signing in:', error);\n    });\n    // });\n  }\n\n  signOut() {\n    this.authService.signOut().catch(error => {\n      console.error('Error signing out:', error);\n    });\n  }\n  ngOnDestroy() {\n    if (this.userSubscription) {\n      this.userSubscription.unsubscribe();\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.SocialAuthService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  viewQuery: function LoginComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.googleSignInButton = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loginElement = _t.first);\n    }\n  },\n  decls: 25,\n  vars: 2,\n  consts: [[1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [3, \"click\"], [4, \"ngIf\"], [1, \"container\", \"mt-5\"], [1, \"row\", \"mt-5\"], [1, \"col-md-4\", \"mt-2\", \"m-auto\"], [1, \"btn\", \"btn-danger\"], [\"loginRef\", \"\"], [\"data-type\", \"standard\", \"data-size\", \"large\", \"data-theme\", \"outline\", \"data-text\", \"sign_in_with goooogle\", \"data-shape\", \"rectangular\", \"data-callback\", \"OnSuccess\", \"data-logo_alignment\", \"left\", 1, \"g_id_signin\"], [\"id\", \"g_id_onload\", \"data-client_id\", \"400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com\", \"data-context\", \"signin\", \"data-ux_mode\", \"redirect\", \"data-login_uri\", \"http://localhost:7189/api/Account/ExternalLogin\", \"data-auto_select\", \"true\", \"data-auto_prompt\", \"false\", \"data-itp_support\", \"true\"], [\"id\", \"buttonDiv\"], [\"data-locale\", \"fr\", 1, \"g_id_signin\"], [\"width\", \"50\", \"height\", \"50\", 3, \"src\", \"alt\"], [\"type\", \"button\", 1, \"btn\", \"btn-info\", 3, \"click\"], [\"data-onsuccess\", \"onSignIn\", 1, \"g-signin2\", 3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(4, \" ... \");\n      i0.ɵɵelement(5, \"hr\");\n      i0.ɵɵelementStart(6, \"div\")(7, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_7_listener() {\n        return ctx.onSignIn();\n      });\n      i0.ɵɵtext(8, \"Sign in with Google\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 6, 3, \"div\", 4);\n      i0.ɵɵtemplate(10, LoginComponent_div_10_Template, 5, 0, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"div\", 5)(12, \"h1\");\n      i0.ɵɵtext(13, \"Google Login with Angular - ItSolutionStuff.com\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 6)(15, \"div\", 7)(16, \"button\", 8, 9);\n      i0.ɵɵtext(18, \" Login with Google \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(19, \"div\", 10)(20, \"div\", 11)(21, \"div\", 12);\n      i0.ɵɵtext(22, \"\\n...\\n\");\n      i0.ɵɵelement(23, \"div\", 13);\n      i0.ɵɵtext(24, \"\\n...\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.user);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.user);\n    }\n  },\n  dependencies: [i3.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginComponent };","map":{"version":3,"names":["GoogleLoginProvider","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_div_9_Template_button_click_4_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","signOut","ɵɵadvance","ɵɵproperty","ctx_r0","user","photoUrl","ɵɵsanitizeUrl","name","ɵɵtextInterpolate","LoginComponent_div_10_Template_button_click_1_listener","_r6","ctx_r5","externalLogin","LoginComponent_div_10_Template_div_click_3_listener","ctx_r7","onSignIn","LoginComponent","constructor","AuthService","authService","ngZone","showError","signInWithGoogle","ngOnInit","authState","subscribe","gapi","load","auth2","init","client_id","console","log","setInterval","externalAuth","sendUserData","next","data","error","err","getAuthInstance","signIn","then","googleUser","run","idToken","getAuthResponse","id_token","PROVIDER_ID","catch","callLoginButton","attachClickHandler","loginElement","nativeElement","googleAuthUser","profile","getBasicProfile","getId","getName","getImageUrl","getEmail","alert","JSON","stringify","undefined","googleAuthSDK","window","cookiepolicy","scope","d","s","id","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","onGoogleSignIn","ngAfterViewInit","renderGoogleSignInButton","google","accounts","initialize","callback","response","onSignIn2","renderButton","googleSignInButton","theme","size","width","height","longtitle","ngOnDestroy","userSubscription","unsubscribe","ɵɵdirectiveInject","i1","i2","SocialAuthService","NgZone","selectors","viewQuery","LoginComponent_Query","rf","ctx","LoginComponent_Template_button_click_7_listener","ɵɵtemplate","LoginComponent_div_9_Template","LoginComponent_div_10_Template"],"sources":["D:\\graduation project\\Graduation_Project-Dubbizel--main\\Graduation_Project-Dubbizel--main\\Dubbizel_Angular\\src\\app\\Login\\login\\login.component.ts","D:\\graduation project\\Graduation_Project-Dubbizel--main\\Graduation_Project-Dubbizel--main\\Dubbizel_Angular\\src\\app\\Login\\login\\login.component.html"],"sourcesContent":["// import { Component, NgZone, OnInit } from '@angular/core';\n// import { AuthService } from 'src/app/Service/auth.service';\n// import { SocialAuthService, GoogleLoginProvider, SocialUser } from '@abacritt/angularx-social-login';\n// import { Subscription } from 'rxjs';\n\n// import { GoogleAuth } from 'google-auth-library';\n\n// declare const gapi: any;\n// @Component({\n//   selector: 'app-login',\n//   templateUrl: './login.component.html',\n//   styleUrls: ['./login.component.scss']\n// })\n\n// export class LoginComponent implements OnInit{\n//   showError:any\n//   user!: SocialUser;\n//   private userSubscription: Subscription | undefined;\n\n//   constructor(private authService: SocialAuthService,private ngZone: NgZone\n//     ,private AuthService:AuthService) {}\n\n//   ngOnInit(): void {\n//     this.userSubscription = this.authService.authState.subscribe(user => {\n//       this.user = user;\n//     });\n\n//     gapi.load('auth2', () => {\n//       gapi.auth2.init({\n//         client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com'\n\n//       });\n//     });\n//   }\n\n//   onSignIn(): void {\n//     const auth2 = gapi.auth2.getAuthInstance();\n//     auth2.signIn().then((googleUser: { getAuthResponse: () => { (): any; new(): any; id_token: any; }; }) => {\n//       this.ngZone.run(() => {\n//         const idToken = googleUser.getAuthResponse().id_token;\n//         this.authService.signIn(GoogleLoginProvider.PROVIDER_ID, { idToken }).catch(error => {\n//           console.error('Error signing in:', error);\n//         });\n//       });\n//     });\n//   }\n\n\n//   signInWithGoogle(): void {\n//     this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).catch(error => {\n//       console.error('Error signing in:', error);\n//     });\n//   }\n\n//   signOut(): void {\n//     this.authService.signOut().catch(error => {\n//       console.error('Error signing out:', error);\n//     });\n//   }\n// //  async ngOnInit(){\n// //   const auth = new GoogleAuth();\n// //   const client = await auth.getClient();\n\n// // }\n//   externalLogin = () => {\n//     this.showError = false;\n//     this.AuthService.signInWithGoogle();\n//   }\n// }\nimport { Component, OnInit, OnDestroy, ViewChild, ElementRef, AfterViewInit, NgZone } from '@angular/core';\nimport { SocialAuthService, GoogleLoginProvider , SocialUser } from '@abacritt/angularx-social-login';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/Service/auth.service';\n\ndeclare const google: any;\ndeclare const gapi: any;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy, AfterViewInit {\n  user!: SocialUser;\n  private userSubscription: any;\n  showError:any\n  @ViewChild('googleSignInButton', { static: false })\n  googleSignInButton!: ElementRef;\n  auth2: any;\n    \n  @ViewChild('loginRef', {static: false }) loginElement!: ElementRef;\n     \n  constructor(private AuthService :AuthService ,private authService: SocialAuthService, private ngZone: NgZone) {\n\n    // this.AuthService.fetchData().subscribe(data => {\n    //   console.log(data);\n    // });\n  }\n\n  ngOnInit(): void {\n     this.authService.authState.subscribe(user => {\n      this.user = user;\n    });\ngapi.load('auth2', () => {\n  gapi.auth2.init({\n    client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com'\n\n  });\n});\n    console.log(this.user)\n    setInterval(() => {\n      \n  \n\n      if(this.AuthService.user != null){\n        console.log(\"good\")\n\n        console.log(this.AuthService.externalAuth)\n        console.log(this.AuthService.user)\n        this.AuthService.sendUserData(this.AuthService.user).subscribe({\n          next: data => console.log(data),\n          error: err => console.log(err),\n        })\n      }\n    }\n      \n      ,3000)\n  }\nonSignIn(): void {\n  const auth2 = gapi.auth2.getAuthInstance();\n  auth2.signIn().then((googleUser: { getAuthResponse: () => { (): any; new(): any; id_token: any; }; }) => {\n    this.ngZone.run(() => {\n      const idToken = googleUser.getAuthResponse().id_token;\n      this.authService.signIn(GoogleLoginProvider.PROVIDER_ID, { idToken }).catch(error => {\n        console.error('Error signing in:', error);\n      });\n    });\n  });\n}\n  callLoginButton() {\n     \n    this.auth2.attachClickHandler(this.loginElement.nativeElement, {},\n      (googleAuthUser:any) => {\n     \n        let profile = googleAuthUser.getBasicProfile();\n        console.log('Token || ' + googleAuthUser.getAuthResponse().id_token);\n        console.log('ID: ' + profile.getId());\n        console.log('Name: ' + profile.getName());\n        console.log('Image URL: ' + profile.getImageUrl());\n        console.log('Email: ' + profile.getEmail());\n            \n       /* Write Your Code Here */\n    \n      }, (error:any) => {\n        alert(JSON.stringify(error, undefined, 2));\n      });\n \n  }\n  \n  googleAuthSDK() {\n     \n    (<any>window)['googleSDKLoaded'] = () => {\n      (<any>window)['gapi'].load('auth2', () => {\n        this.auth2 = (<any>window)['gapi'].auth2.init({\n          client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com',\n          cookiepolicy: 'single_host_origin',\n          scope: 'profile email'\n        });\n        this.callLoginButton();\n      });\n    }\n\n    (function(d, s, id){\n      var js, fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) {return;}\n      js = d.createElement('script'); \n      js.id = id;\n      js.src = \"https://apis.google.com/js/platform.js?onload=googleSDKLoaded\";\n      fjs?.parentNode?.insertBefore(js, fjs);\n    }(document, 'script', 'google-jssdk'));\n  }\n\n  onGoogleSignIn(): void {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  }\n  externalLogin = () => {\n    this.showError = false;\n    this.AuthService.signInWithGoogle();\n  }\n  signInWithGoogle(): void {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  }\n  ngAfterViewInit(): void {\n    this.renderGoogleSignInButton();\n    this.googleAuthSDK();\n\n  }\n\n  renderGoogleSignInButton(): void {\n    google.accounts.id.initialize({\n      client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com',\n      callback: (response:any) => this.onSignIn2()\n    });\n    console.log(\"reach\")\n    google.accounts.id.renderButton(this.googleSignInButton.nativeElement, {\n      theme: 'outline',\n      size: 'large',\n      width: '240',\n      height: '50',\n      longtitle: true\n    });\n  }\n\n  onSignIn2(): void {\n    // this.ngZone.run(() => {\n      console.log(\"reach on\")\n\n      // const idToken = response.credential;\n      this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).catch(error => {\n        console.error('Error signing in:', error);\n      });\n    // });\n  }\n\n  signOut(): void {\n    this.authService.signOut().catch(error => {\n      console.error('Error signing out:', error);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.userSubscription) {\n      this.userSubscription.unsubscribe();\n    }\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <h1 class=\"card-title\">Login</h1>\n        ...\n        <!-- <form [formGroup]=\"loginForm\" autocomplete=\"off\" novalidate (ngSubmit)=\"loginUser(loginForm.value)\">\n            ...\n        </form> -->\n        <hr>\n        <div>\n            <!-- <div *ngIf=\"user\">\n                <img [src]=\"user.photoUrl\" [alt]=\"user.name\" width=\"50\" height=\"50\">\n                <span>{{ user.name }}</span>\n                <button (click)=\"signOut()\">Sign out</button>\n              </div>\n              <div *ngIf=\"!user\">\n                <asl-google-signin-button >\n                    Sign in with Google\n                     <button (click)=\"signInWithGoogle()\">Sign in with Google</button> \n                </asl-google-signin-button>\n                <div class=\"g-signin2\" (click)=\"onSignIn()\" data-onsuccess=\"onSignIn\"></div>\n\n              </div> -->\n              <button (click)=\"onSignIn()\">Sign in with Google</button>\n\n              <div *ngIf=\"user\">\n                <img [src]=\"user.photoUrl\" [alt]=\"user.name\" width=\"50\" height=\"50\">\n                <span>{{ user.name }}</span>\n                <button (click)=\"signOut()\">Sign out</button>\n              </div>\n              <div *ngIf=\"!user\">\n                <button class=\"btn btn-info\" type=\"button\" (click)=\"externalLogin()\">Google</button>\n\n                <div class=\"g-signin2\" (click)=\"onSignIn()\" data-onsuccess=\"onSignIn\">sign in</div>\n\n                <!-- <div #googleSignInButton \n                ></div> -->\n              </div>\n              \n        </div>\n    </div>\n</div>\n\n<div class=\"container mt-5\">\n\n  <h1>Google Login with Angular - ItSolutionStuff.com</h1>\n\n  <div class=\"row mt-5\">\n\n    <div class=\"col-md-4 mt-2 m-auto \">\n\n        <button class=\"btn btn-danger\" #loginRef>\n\n            Login with Google\n\n          </button>\n\n    </div>    \n\n  </div>\n\n</div>\n<!-- data-login_uri=\"http://localhost:7189/api/Account/PostUser\"  -->\n<!-- data-login_uri=\"http://localhost:4200\" -->\n<script src=\"https://accounts.google.com/gsi/client\" async defer></script>\n<!-- <div id=\"g_id_onload\"\ndata-client_id='400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com'\n   data-auto_prompt=\"false\">\n</div> -->\n<div class=\"g_id_signin\"\n   data-type=\"standard\"\n   data-size=\"large\"\n   data-theme=\"outline\"\n   data-text=\"sign_in_with goooogle\"\n   data-shape=\"rectangular\"\n   data-callback=\"OnSuccess\"\n   data-logo_alignment=\"left\">\n</div>\n <div id=\"g_id_onload\"\n     data-client_id=\"400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com\"\n     data-context=\"signin\"\n     data-ux_mode=\"redirect\"\n     data-login_uri=\"http://localhost:7189/api/Account/ExternalLogin\"\n     data-auto_select=\"true\"\n     data-auto_prompt=\"false\"\n     data-itp_support=\"true\">\n</div>\n<!--\n<div class=\"g_id_signin\"\n     data-type=\"standard\"\n     data-shape=\"pill\"\n     data-theme=\"outline\"\n     data-text=\"signin_with\"\n     data-size=\"large\"\n     data-logo_alignment=\"left\">\n</div> -->\n\n<script src=\"https://accounts.google.com/gsi/client\" async defer></script>\n<script>\n  function OnSuccess(){\n    console.log(\"OnSuccess\")\n  }\n  function handleCredentialResponse(response) {\n    console.log(\"Encoded JWT ID token: \" + response.credential);\n  }\n  window.onload = function () {\n    google.accounts.id.initialize({\n      client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com',\n      callback: handleCredentialResponse\n    });\n    google.accounts.id.renderButton(\n      document.getElementById(\"buttonDiv\"),\n      { theme: \"outline\", size: \"large\" }  // customization attributes\n    );\n    google.accounts.id.prompt(); // also display the One Tap dialog\n  }\n</script>\n<div id=\"buttonDiv\"></div> \n\n\n<script src=\"https://accounts.google.com/gsi/client?hl=fr\" async defer></script>\n...\n<div class=\"g_id_signin\"\n  data-locale=\"fr\">\n</div>\n<!-- <script src=\"https://accounts.google.com/gsi/client?hl=fr\" async defer></script> -->\n...\n<!-- <script>\ngoogle.accounts.id.renderButton(\n  document.getElementById(\"buttonDiv\"),                \n  { locale: \"fr\" }\n);\n</script> -->\n<script>\ngoogle.accounts.id.renderButton(\n  document.getElementById(\"buttonDiv\"),                \n  { locale: \"fr\" }\n);\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}