{"ast":null,"code":"import { GoogleLoginProvider } from '@abacritt/angularx-social-login';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@abacritt/angularx-social-login\";\nconst _c0 = [\"googleSignInButton\"];\nclass LoginComponent {\n  constructor(authService, ngZone) {\n    this.authService = authService;\n    this.ngZone = ngZone;\n  }\n  ngOnInit() {\n    this.userSubscription = this.authService.authState.subscribe(user => {\n      this.user = user;\n    });\n  }\n  ngAfterViewInit() {\n    this.renderGoogleSignInButton();\n  }\n  renderGoogleSignInButton() {\n    google.accounts.id.initialize({\n      client_id: '<YOUR_GOOGLE_CLIENT_ID>',\n      callback: response => this.onSignIn(response)\n    });\n    google.accounts.id.renderButton(this.googleSignInButton.nativeElement, {\n      theme: 'outline',\n      size: 'large',\n      width: '240',\n      height: '50',\n      longtitle: true\n    });\n  }\n  onSignIn(response) {\n    this.ngZone.run(() => {\n      const idToken = response.credential;\n      this.authService.signIn(GoogleLoginProvider.PROVIDER_ID, {\n        idToken\n      }).catch(error => {\n        console.error('Error signing in:', error);\n      });\n    });\n  }\n  signOut() {\n    this.authService.signOut().catch(error => {\n      console.error('Error signing out:', error);\n    });\n  }\n  ngOnDestroy() {\n    if (this.userSubscription) {\n      this.userSubscription.unsubscribe();\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.SocialAuthService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  viewQuery: function LoginComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.googleSignInButton = _t.first);\n    }\n  },\n  decls: 8,\n  vars: 0,\n  consts: [[1, \"card\"], [1, \"card-body\"], [1, \"card-title\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(4, \" ... \");\n      i0.ɵɵelement(5, \"hr\")(6, \"div\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(7, \"\\n...\\n\");\n    }\n  },\n  styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\t\\\"use strict\\\";\\n \\t\\n \\t\\n })()[_ngcontent-%COMP%]\\n;\"]\n});\nexport { LoginComponent };","map":{"version":3,"names":["GoogleLoginProvider","LoginComponent","constructor","authService","ngZone","ngOnInit","userSubscription","authState","subscribe","user","ngAfterViewInit","renderGoogleSignInButton","google","accounts","id","initialize","client_id","callback","response","onSignIn","renderButton","googleSignInButton","nativeElement","theme","size","width","height","longtitle","run","idToken","credential","signIn","PROVIDER_ID","catch","error","console","signOut","ngOnDestroy","unsubscribe","i0","ɵɵdirectiveInject","i1","SocialAuthService","NgZone","selectors","viewQuery","LoginComponent_Query","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["D:\\graduation project\\Graduation_Project-Dubbizel--main\\Graduation_Project-Dubbizel--main\\Dubbizel_Angular\\src\\app\\Login\\login\\login.component.ts","D:\\graduation project\\Graduation_Project-Dubbizel--main\\Graduation_Project-Dubbizel--main\\Dubbizel_Angular\\src\\app\\Login\\login\\login.component.html"],"sourcesContent":["// import { Component, NgZone, OnInit } from '@angular/core';\n// // import { AuthService } from 'src/app/Service/auth.service';\n// import { SocialAuthService, GoogleLoginProvider, SocialUser } from '@abacritt/angularx-social-login';\n// import { Subscription } from 'rxjs';\n\n// import { GoogleAuth } from 'google-auth-library';\n\n// declare const gapi: any;\n// @Component({\n//   selector: 'app-login',\n//   templateUrl: './login.component.html',\n//   styleUrls: ['./login.component.scss']\n// })\n\n// export class LoginComponent implements OnInit{\n//   showError:any\n//   user!: SocialUser;\n//   private userSubscription: Subscription | undefined;\n\n//   constructor(private authService: SocialAuthService,private ngZone: NgZone) {}\n\n//   ngOnInit(): void {\n//     this.userSubscription = this.authService.authState.subscribe(user => {\n//       this.user = user;\n//     });\n\n//     gapi.load('auth2', () => {\n//       gapi.auth2.init({\n//         client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com'\n\n//       });\n//     });\n//   }\n\n//   onSignIn(): void {\n//     const auth2 = gapi.auth2.getAuthInstance();\n//     auth2.signIn().then((googleUser: { getAuthResponse: () => { (): any; new(): any; id_token: any; }; }) => {\n//       this.ngZone.run(() => {\n//         const idToken = googleUser.getAuthResponse().id_token;\n//         this.authService.signIn(GoogleLoginProvider.PROVIDER_ID, { idToken }).catch(error => {\n//           console.error('Error signing in:', error);\n//         });\n//       });\n//     });\n//   }\n\n\n//   signInWithGoogle(): void {\n//     this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).catch(error => {\n//       console.error('Error signing in:', error);\n//     });\n//   }\n\n//   signOut(): void {\n//     this.authService.signOut().catch(error => {\n//       console.error('Error signing out:', error);\n//     });\n//   }\n// //  async ngOnInit(){\n// //   const auth = new GoogleAuth();\n// //   const client = await auth.getClient();\n\n// // }\n//   // externalLogin = () => {\n//   //   this.showError = false;\n//   //   this.authService.signInWithGoogle();\n//   // }\n// }\nimport { Component, OnInit, OnDestroy, ViewChild, ElementRef, AfterViewInit, NgZone } from '@angular/core';\nimport { SocialAuthService, GoogleLoginProvider, SocialUser } from '@abacritt/angularx-social-login';\nimport { Subscription } from 'rxjs';\n\ndeclare const google: any;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy, AfterViewInit {\n  user!: SocialUser;\n  private userSubscription!: Subscription;\n\n  @ViewChild('googleSignInButton', { static: false })\n  googleSignInButton!: ElementRef;\n\n  constructor(private authService: SocialAuthService, private ngZone: NgZone) {}\n\n  ngOnInit(): void {\n    this.userSubscription = this.authService.authState.subscribe(user => {\n      this.user = user;\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.renderGoogleSignInButton();\n  }\n\n  renderGoogleSignInButton(): void {\n    google.accounts.id.initialize({\n      client_id: '<YOUR_GOOGLE_CLIENT_ID>',\n      callback: (response:any) => this.onSignIn(response)\n    });\n\n    google.accounts.id.renderButton(this.googleSignInButton.nativeElement, {\n      theme: 'outline',\n      size: 'large',\n      width: '240',\n      height: '50',\n      longtitle: true\n    });\n  }\n\n  onSignIn(response:any): void {\n    this.ngZone.run(() => {\n      const idToken = response.credential;\n      this.authService.signIn(GoogleLoginProvider.PROVIDER_ID, { idToken }).catch(error => {\n        console.error('Error signing in:', error);\n      });\n    });\n  }\n\n  signOut(): void {\n    this.authService.signOut().catch(error => {\n      console.error('Error signing out:', error);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.userSubscription) {\n      this.userSubscription.unsubscribe();\n    }\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <h1 class=\"card-title\">Login</h1>\n        ...\n        <!-- <form [formGroup]=\"loginForm\" autocomplete=\"off\" novalidate (ngSubmit)=\"loginUser(loginForm.value)\">\n            ...\n        </form> -->\n        <hr>\n        <div>\n            <!-- <div *ngIf=\"user\">\n                <img [src]=\"user.photoUrl\" [alt]=\"user.name\" width=\"50\" height=\"50\">\n                <span>{{ user.name }}</span>\n                <button (click)=\"signOut()\">Sign out</button>\n              </div>\n              <div *ngIf=\"!user\">\n                <asl-google-signin-button >\n                    Sign in with Google\n                     <button (click)=\"signInWithGoogle()\">Sign in with Google</button> \n                </asl-google-signin-button>\n                <div class=\"g-signin2\" (click)=\"onSignIn()\" data-onsuccess=\"onSignIn\"></div>\n\n              </div> -->\n              \n        </div>\n    </div>\n</div>\n\n<script src=\"https://accounts.google.com/gsi/client?hl=fr\" async defer></script>\n...\n<script>\ngoogle.accounts.id.renderButton(\n  document.getElementById(\"buttonDiv\"),                \n  { locale: \"fr\" }\n);\n</script>"],"mappings":"AAqEA,SAA4BA,mBAAmB,QAAoB,iCAAiC;;;;AAKpG,MAKaC,cAAc;EAOzBC,YAAoBC,WAA8B,EAAUC,MAAc;IAAtD,KAAAD,WAAW,GAAXA,WAAW;IAA6B,KAAAC,MAAM,GAANA,MAAM;EAAW;EAE7EC,QAAQA,CAAA;IACN,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACH,WAAW,CAACI,SAAS,CAACC,SAAS,CAACC,IAAI,IAAG;MAClE,IAAI,CAACA,IAAI,GAAGA,IAAI;IAClB,CAAC,CAAC;EACJ;EAEAC,eAAeA,CAAA;IACb,IAAI,CAACC,wBAAwB,EAAE;EACjC;EAEAA,wBAAwBA,CAAA;IACtBC,MAAM,CAACC,QAAQ,CAACC,EAAE,CAACC,UAAU,CAAC;MAC5BC,SAAS,EAAE,yBAAyB;MACpCC,QAAQ,EAAGC,QAAY,IAAK,IAAI,CAACC,QAAQ,CAACD,QAAQ;KACnD,CAAC;IAEFN,MAAM,CAACC,QAAQ,CAACC,EAAE,CAACM,YAAY,CAAC,IAAI,CAACC,kBAAkB,CAACC,aAAa,EAAE;MACrEC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE,KAAK;MACZC,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE;KACZ,CAAC;EACJ;EAEAR,QAAQA,CAACD,QAAY;IACnB,IAAI,CAACd,MAAM,CAACwB,GAAG,CAAC,MAAK;MACnB,MAAMC,OAAO,GAAGX,QAAQ,CAACY,UAAU;MACnC,IAAI,CAAC3B,WAAW,CAAC4B,MAAM,CAAC/B,mBAAmB,CAACgC,WAAW,EAAE;QAAEH;MAAO,CAAE,CAAC,CAACI,KAAK,CAACC,KAAK,IAAG;QAClFC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MAC3C,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAE,OAAOA,CAAA;IACL,IAAI,CAACjC,WAAW,CAACiC,OAAO,EAAE,CAACH,KAAK,CAACC,KAAK,IAAG;MACvCC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC,CAAC;EACJ;EAEAG,WAAWA,CAAA;IACT,IAAI,IAAI,CAAC/B,gBAAgB,EAAE;MACzB,IAAI,CAACA,gBAAgB,CAACgC,WAAW,EAAE;;EAEvC;;AArDWrC,cAAc,C;mBAAdA,cAAc,EAAAsC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,iBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAI,MAAA;AAAA;AAAd1C,cAAc,C;QAAdA,cAAc;EAAA2C,SAAA;EAAAC,SAAA,WAAAC,qBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;;;;;;;;;;;;MC/E3BR,EAAA,CAAAU,cAAA,aAAkB;MAEaV,EAAA,CAAAW,MAAA,YAAK;MAAAX,EAAA,CAAAY,YAAA,EAAK;MACjCZ,EAAA,CAAAW,MAAA,YACA;MAGAX,EAAA,CAAAa,SAAA,SAAI;MAiBRb,EAAA,CAAAY,YAAA,EAAM;MAIVZ,EAAA,CAAAW,MAAA,cACA;;;;;SDkDajD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}