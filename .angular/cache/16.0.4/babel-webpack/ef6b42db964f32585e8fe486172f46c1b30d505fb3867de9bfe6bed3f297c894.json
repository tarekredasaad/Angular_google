{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\nvar _asyncToGenerator = require(\"D:/graduation project/Graduation_Project-Dubbizel--main/Graduation_Project-Dubbizel--main/Dubbizel_Angular/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GoogleToken = void 0;\nconst fs = require(\"fs\");\nconst gaxios_1 = require(\"gaxios\");\nconst jws = require(\"jws\");\nconst path = require(\"path\");\nconst util_1 = require(\"util\");\nconst readFile = fs.readFile ? (0, util_1.promisify)(fs.readFile) : /*#__PURE__*/_asyncToGenerator(function* () {\n  // if running in the web-browser, fs.readFile may not have been shimmed.\n  throw new ErrorWithCode('use key rather than keyFile.', 'MISSING_CREDENTIALS');\n});\nconst GOOGLE_TOKEN_URL = 'https://www.googleapis.com/oauth2/v4/token';\nconst GOOGLE_REVOKE_TOKEN_URL = 'https://accounts.google.com/o/oauth2/revoke?token=';\nclass ErrorWithCode extends Error {\n  constructor(message, code) {\n    super(message);\n    this.code = code;\n  }\n}\nlet getPem;\nclass GoogleToken {\n  /**\n   * Create a GoogleToken.\n   *\n   * @param options  Configuration object.\n   */\n  constructor(options) {\n    this.transporter = {\n      request: opts => (0, gaxios_1.request)(opts)\n    };\n    this.configure(options);\n  }\n  get accessToken() {\n    return this.rawToken ? this.rawToken.access_token : undefined;\n  }\n  get idToken() {\n    return this.rawToken ? this.rawToken.id_token : undefined;\n  }\n  get tokenType() {\n    return this.rawToken ? this.rawToken.token_type : undefined;\n  }\n  get refreshToken() {\n    return this.rawToken ? this.rawToken.refresh_token : undefined;\n  }\n  /**\n   * Returns whether the token has expired.\n   *\n   * @return true if the token has expired, false otherwise.\n   */\n  hasExpired() {\n    const now = new Date().getTime();\n    if (this.rawToken && this.expiresAt) {\n      return now >= this.expiresAt;\n    } else {\n      return true;\n    }\n  }\n  /**\n   * Returns whether the token will expire within eagerRefreshThresholdMillis\n   *\n   * @return true if the token will be expired within eagerRefreshThresholdMillis, false otherwise.\n   */\n  isTokenExpiring() {\n    var _a;\n    const now = new Date().getTime();\n    const eagerRefreshThresholdMillis = (_a = this.eagerRefreshThresholdMillis) !== null && _a !== void 0 ? _a : 0;\n    if (this.rawToken && this.expiresAt) {\n      return this.expiresAt <= now + eagerRefreshThresholdMillis;\n    } else {\n      return true;\n    }\n  }\n  getToken(callback, opts = {}) {\n    if (typeof callback === 'object') {\n      opts = callback;\n      callback = undefined;\n    }\n    opts = Object.assign({\n      forceRefresh: false\n    }, opts);\n    if (callback) {\n      const cb = callback;\n      this.getTokenAsync(opts).then(t => cb(null, t), callback);\n      return;\n    }\n    return this.getTokenAsync(opts);\n  }\n  /**\n   * Given a keyFile, extract the key and client email if available\n   * @param keyFile Path to a json, pem, or p12 file that contains the key.\n   * @returns an object with privateKey and clientEmail properties\n   */\n  getCredentials(keyFile) {\n    return _asyncToGenerator(function* () {\n      const ext = path.extname(keyFile);\n      switch (ext) {\n        case '.json':\n          {\n            const key = yield readFile(keyFile, 'utf8');\n            const body = JSON.parse(key);\n            const privateKey = body.private_key;\n            const clientEmail = body.client_email;\n            if (!privateKey || !clientEmail) {\n              throw new ErrorWithCode('private_key and client_email are required.', 'MISSING_CREDENTIALS');\n            }\n            return {\n              privateKey,\n              clientEmail\n            };\n          }\n        case '.der':\n        case '.crt':\n        case '.pem':\n          {\n            const privateKey = yield readFile(keyFile, 'utf8');\n            return {\n              privateKey\n            };\n          }\n        case '.p12':\n        case '.pfx':\n          {\n            // NOTE:  The loading of `google-p12-pem` is deferred for performance\n            // reasons.  The `node-forge` npm module in `google-p12-pem` adds a fair\n            // bit time to overall module loading, and is likely not frequently\n            // used.  In a future release, p12 support will be entirely removed.\n            if (!getPem) {\n              getPem = (yield Promise.resolve().then(() => require('google-p12-pem'))).getPem;\n            }\n            const privateKey = yield getPem(keyFile);\n            return {\n              privateKey\n            };\n          }\n        default:\n          throw new ErrorWithCode('Unknown certificate type. Type is determined based on file extension. ' + 'Current supported extensions are *.json, *.pem, and *.p12.', 'UNKNOWN_CERTIFICATE_TYPE');\n      }\n    })();\n  }\n  getTokenAsync(opts) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.inFlightRequest && !opts.forceRefresh) {\n        return _this.inFlightRequest;\n      }\n      try {\n        return yield _this.inFlightRequest = _this.getTokenAsyncInner(opts);\n      } finally {\n        _this.inFlightRequest = undefined;\n      }\n    })();\n  }\n  getTokenAsyncInner(opts) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (_this2.isTokenExpiring() === false && opts.forceRefresh === false) {\n        return Promise.resolve(_this2.rawToken);\n      }\n      if (!_this2.key && !_this2.keyFile) {\n        throw new Error('No key or keyFile set.');\n      }\n      if (!_this2.key && _this2.keyFile) {\n        const creds = yield _this2.getCredentials(_this2.keyFile);\n        _this2.key = creds.privateKey;\n        _this2.iss = creds.clientEmail || _this2.iss;\n        if (!creds.clientEmail) {\n          _this2.ensureEmail();\n        }\n      }\n      return _this2.requestToken();\n    })();\n  }\n  ensureEmail() {\n    if (!this.iss) {\n      throw new ErrorWithCode('email is required.', 'MISSING_CREDENTIALS');\n    }\n  }\n  revokeToken(callback) {\n    if (callback) {\n      this.revokeTokenAsync().then(() => callback(), callback);\n      return;\n    }\n    return this.revokeTokenAsync();\n  }\n  revokeTokenAsync() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this3.accessToken) {\n        throw new Error('No token to revoke.');\n      }\n      const url = GOOGLE_REVOKE_TOKEN_URL + _this3.accessToken;\n      yield _this3.transporter.request({\n        url\n      });\n      _this3.configure({\n        email: _this3.iss,\n        sub: _this3.sub,\n        key: _this3.key,\n        keyFile: _this3.keyFile,\n        scope: _this3.scope,\n        additionalClaims: _this3.additionalClaims\n      });\n    })();\n  }\n  /**\n   * Configure the GoogleToken for re-use.\n   * @param  {object} options Configuration object.\n   */\n  configure(options = {}) {\n    this.keyFile = options.keyFile;\n    this.key = options.key;\n    this.rawToken = undefined;\n    this.iss = options.email || options.iss;\n    this.sub = options.sub;\n    this.additionalClaims = options.additionalClaims;\n    if (typeof options.scope === 'object') {\n      this.scope = options.scope.join(' ');\n    } else {\n      this.scope = options.scope;\n    }\n    this.eagerRefreshThresholdMillis = options.eagerRefreshThresholdMillis;\n    if (options.transporter) {\n      this.transporter = options.transporter;\n    }\n  }\n  /**\n   * Request the token from Google.\n   */\n  requestToken() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n      const iat = Math.floor(new Date().getTime() / 1000);\n      const additionalClaims = _this4.additionalClaims || {};\n      const payload = Object.assign({\n        iss: _this4.iss,\n        scope: _this4.scope,\n        aud: GOOGLE_TOKEN_URL,\n        exp: iat + 3600,\n        iat,\n        sub: _this4.sub\n      }, additionalClaims);\n      const signedJWT = jws.sign({\n        header: {\n          alg: 'RS256'\n        },\n        payload,\n        secret: _this4.key\n      });\n      try {\n        const r = yield _this4.transporter.request({\n          method: 'POST',\n          url: GOOGLE_TOKEN_URL,\n          data: {\n            grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n            assertion: signedJWT\n          },\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          responseType: 'json'\n        });\n        _this4.rawToken = r.data;\n        _this4.expiresAt = r.data.expires_in === null || r.data.expires_in === undefined ? undefined : (iat + r.data.expires_in) * 1000;\n        return _this4.rawToken;\n      } catch (e) {\n        _this4.rawToken = undefined;\n        _this4.tokenExpires = undefined;\n        const body = e.response && ((_a = e.response) === null || _a === void 0 ? void 0 : _a.data) ? (_b = e.response) === null || _b === void 0 ? void 0 : _b.data : {};\n        if (body.error) {\n          const desc = body.error_description ? `: ${body.error_description}` : '';\n          e.message = `${body.error}${desc}`;\n        }\n        throw e;\n      }\n    })();\n  }\n}\nexports.GoogleToken = GoogleToken;","map":{"version":3,"names":["_asyncToGenerator","require","default","Object","defineProperty","exports","value","GoogleToken","fs","gaxios_1","jws","path","util_1","readFile","promisify","ErrorWithCode","GOOGLE_TOKEN_URL","GOOGLE_REVOKE_TOKEN_URL","Error","constructor","message","code","getPem","options","transporter","request","opts","configure","accessToken","rawToken","access_token","undefined","idToken","id_token","tokenType","token_type","refreshToken","refresh_token","hasExpired","now","Date","getTime","expiresAt","isTokenExpiring","_a","eagerRefreshThresholdMillis","getToken","callback","assign","forceRefresh","cb","getTokenAsync","then","t","getCredentials","keyFile","ext","extname","key","body","JSON","parse","privateKey","private_key","clientEmail","client_email","Promise","resolve","_this","inFlightRequest","getTokenAsyncInner","_this2","creds","iss","ensureEmail","requestToken","revokeToken","revokeTokenAsync","_this3","url","email","sub","scope","additionalClaims","join","_this4","_b","iat","Math","floor","payload","aud","exp","signedJWT","sign","header","alg","secret","r","method","data","grant_type","assertion","headers","responseType","expires_in","e","tokenExpires","response","error","desc","error_description"],"sources":["D:/graduation project/Graduation_Project-Dubbizel--main/Graduation_Project-Dubbizel--main/Dubbizel_Angular/node_modules/gtoken/build/src/index.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GoogleToken = void 0;\nconst fs = require(\"fs\");\nconst gaxios_1 = require(\"gaxios\");\nconst jws = require(\"jws\");\nconst path = require(\"path\");\nconst util_1 = require(\"util\");\nconst readFile = fs.readFile\n    ? (0, util_1.promisify)(fs.readFile)\n    : async () => {\n        // if running in the web-browser, fs.readFile may not have been shimmed.\n        throw new ErrorWithCode('use key rather than keyFile.', 'MISSING_CREDENTIALS');\n    };\nconst GOOGLE_TOKEN_URL = 'https://www.googleapis.com/oauth2/v4/token';\nconst GOOGLE_REVOKE_TOKEN_URL = 'https://accounts.google.com/o/oauth2/revoke?token=';\nclass ErrorWithCode extends Error {\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\nlet getPem;\nclass GoogleToken {\n    /**\n     * Create a GoogleToken.\n     *\n     * @param options  Configuration object.\n     */\n    constructor(options) {\n        this.transporter = {\n            request: opts => (0, gaxios_1.request)(opts),\n        };\n        this.configure(options);\n    }\n    get accessToken() {\n        return this.rawToken ? this.rawToken.access_token : undefined;\n    }\n    get idToken() {\n        return this.rawToken ? this.rawToken.id_token : undefined;\n    }\n    get tokenType() {\n        return this.rawToken ? this.rawToken.token_type : undefined;\n    }\n    get refreshToken() {\n        return this.rawToken ? this.rawToken.refresh_token : undefined;\n    }\n    /**\n     * Returns whether the token has expired.\n     *\n     * @return true if the token has expired, false otherwise.\n     */\n    hasExpired() {\n        const now = new Date().getTime();\n        if (this.rawToken && this.expiresAt) {\n            return now >= this.expiresAt;\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * Returns whether the token will expire within eagerRefreshThresholdMillis\n     *\n     * @return true if the token will be expired within eagerRefreshThresholdMillis, false otherwise.\n     */\n    isTokenExpiring() {\n        var _a;\n        const now = new Date().getTime();\n        const eagerRefreshThresholdMillis = (_a = this.eagerRefreshThresholdMillis) !== null && _a !== void 0 ? _a : 0;\n        if (this.rawToken && this.expiresAt) {\n            return this.expiresAt <= now + eagerRefreshThresholdMillis;\n        }\n        else {\n            return true;\n        }\n    }\n    getToken(callback, opts = {}) {\n        if (typeof callback === 'object') {\n            opts = callback;\n            callback = undefined;\n        }\n        opts = Object.assign({\n            forceRefresh: false,\n        }, opts);\n        if (callback) {\n            const cb = callback;\n            this.getTokenAsync(opts).then(t => cb(null, t), callback);\n            return;\n        }\n        return this.getTokenAsync(opts);\n    }\n    /**\n     * Given a keyFile, extract the key and client email if available\n     * @param keyFile Path to a json, pem, or p12 file that contains the key.\n     * @returns an object with privateKey and clientEmail properties\n     */\n    async getCredentials(keyFile) {\n        const ext = path.extname(keyFile);\n        switch (ext) {\n            case '.json': {\n                const key = await readFile(keyFile, 'utf8');\n                const body = JSON.parse(key);\n                const privateKey = body.private_key;\n                const clientEmail = body.client_email;\n                if (!privateKey || !clientEmail) {\n                    throw new ErrorWithCode('private_key and client_email are required.', 'MISSING_CREDENTIALS');\n                }\n                return { privateKey, clientEmail };\n            }\n            case '.der':\n            case '.crt':\n            case '.pem': {\n                const privateKey = await readFile(keyFile, 'utf8');\n                return { privateKey };\n            }\n            case '.p12':\n            case '.pfx': {\n                // NOTE:  The loading of `google-p12-pem` is deferred for performance\n                // reasons.  The `node-forge` npm module in `google-p12-pem` adds a fair\n                // bit time to overall module loading, and is likely not frequently\n                // used.  In a future release, p12 support will be entirely removed.\n                if (!getPem) {\n                    getPem = (await Promise.resolve().then(() => require('google-p12-pem'))).getPem;\n                }\n                const privateKey = await getPem(keyFile);\n                return { privateKey };\n            }\n            default:\n                throw new ErrorWithCode('Unknown certificate type. Type is determined based on file extension. ' +\n                    'Current supported extensions are *.json, *.pem, and *.p12.', 'UNKNOWN_CERTIFICATE_TYPE');\n        }\n    }\n    async getTokenAsync(opts) {\n        if (this.inFlightRequest && !opts.forceRefresh) {\n            return this.inFlightRequest;\n        }\n        try {\n            return await (this.inFlightRequest = this.getTokenAsyncInner(opts));\n        }\n        finally {\n            this.inFlightRequest = undefined;\n        }\n    }\n    async getTokenAsyncInner(opts) {\n        if (this.isTokenExpiring() === false && opts.forceRefresh === false) {\n            return Promise.resolve(this.rawToken);\n        }\n        if (!this.key && !this.keyFile) {\n            throw new Error('No key or keyFile set.');\n        }\n        if (!this.key && this.keyFile) {\n            const creds = await this.getCredentials(this.keyFile);\n            this.key = creds.privateKey;\n            this.iss = creds.clientEmail || this.iss;\n            if (!creds.clientEmail) {\n                this.ensureEmail();\n            }\n        }\n        return this.requestToken();\n    }\n    ensureEmail() {\n        if (!this.iss) {\n            throw new ErrorWithCode('email is required.', 'MISSING_CREDENTIALS');\n        }\n    }\n    revokeToken(callback) {\n        if (callback) {\n            this.revokeTokenAsync().then(() => callback(), callback);\n            return;\n        }\n        return this.revokeTokenAsync();\n    }\n    async revokeTokenAsync() {\n        if (!this.accessToken) {\n            throw new Error('No token to revoke.');\n        }\n        const url = GOOGLE_REVOKE_TOKEN_URL + this.accessToken;\n        await this.transporter.request({ url });\n        this.configure({\n            email: this.iss,\n            sub: this.sub,\n            key: this.key,\n            keyFile: this.keyFile,\n            scope: this.scope,\n            additionalClaims: this.additionalClaims,\n        });\n    }\n    /**\n     * Configure the GoogleToken for re-use.\n     * @param  {object} options Configuration object.\n     */\n    configure(options = {}) {\n        this.keyFile = options.keyFile;\n        this.key = options.key;\n        this.rawToken = undefined;\n        this.iss = options.email || options.iss;\n        this.sub = options.sub;\n        this.additionalClaims = options.additionalClaims;\n        if (typeof options.scope === 'object') {\n            this.scope = options.scope.join(' ');\n        }\n        else {\n            this.scope = options.scope;\n        }\n        this.eagerRefreshThresholdMillis = options.eagerRefreshThresholdMillis;\n        if (options.transporter) {\n            this.transporter = options.transporter;\n        }\n    }\n    /**\n     * Request the token from Google.\n     */\n    async requestToken() {\n        var _a, _b;\n        const iat = Math.floor(new Date().getTime() / 1000);\n        const additionalClaims = this.additionalClaims || {};\n        const payload = Object.assign({\n            iss: this.iss,\n            scope: this.scope,\n            aud: GOOGLE_TOKEN_URL,\n            exp: iat + 3600,\n            iat,\n            sub: this.sub,\n        }, additionalClaims);\n        const signedJWT = jws.sign({\n            header: { alg: 'RS256' },\n            payload,\n            secret: this.key,\n        });\n        try {\n            const r = await this.transporter.request({\n                method: 'POST',\n                url: GOOGLE_TOKEN_URL,\n                data: {\n                    grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n                    assertion: signedJWT,\n                },\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                responseType: 'json',\n            });\n            this.rawToken = r.data;\n            this.expiresAt =\n                r.data.expires_in === null || r.data.expires_in === undefined\n                    ? undefined\n                    : (iat + r.data.expires_in) * 1000;\n            return this.rawToken;\n        }\n        catch (e) {\n            this.rawToken = undefined;\n            this.tokenExpires = undefined;\n            const body = e.response && ((_a = e.response) === null || _a === void 0 ? void 0 : _a.data)\n                ? (_b = e.response) === null || _b === void 0 ? void 0 : _b.data\n                : {};\n            if (body.error) {\n                const desc = body.error_description\n                    ? `: ${body.error_description}`\n                    : '';\n                e.message = `${body.error}${desc}`;\n            }\n            throw e;\n        }\n    }\n}\nexports.GoogleToken = GoogleToken;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}