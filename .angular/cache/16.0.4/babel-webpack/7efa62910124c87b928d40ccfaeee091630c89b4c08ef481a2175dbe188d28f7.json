{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nconst events_1 = require(\"events\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst promisify_1 = __importDefault(require(\"./promisify\"));\nconst debug = debug_1.default('agent-base');\nfunction isAgent(v) {\n  return Boolean(v) && typeof v.addRequest === 'function';\n}\nfunction isSecureEndpoint() {\n  const {\n    stack\n  } = new Error();\n  if (typeof stack !== 'string') return false;\n  return stack.split('\\n').some(l => l.indexOf('(https.js:') !== -1 || l.indexOf('node:https:') !== -1);\n}\nfunction createAgent(callback, opts) {\n  return new createAgent.Agent(callback, opts);\n}\n(function (createAgent) {\n  /**\n   * Base `http.Agent` implementation.\n   * No pooling/keep-alive is implemented by default.\n   *\n   * @param {Function} callback\n   * @api public\n   */\n  class Agent extends events_1.EventEmitter {\n    constructor(callback, _opts) {\n      super();\n      let opts = _opts;\n      if (typeof callback === 'function') {\n        this.callback = callback;\n      } else if (callback) {\n        opts = callback;\n      }\n      // Timeout for the socket to be returned from the callback\n      this.timeout = null;\n      if (opts && typeof opts.timeout === 'number') {\n        this.timeout = opts.timeout;\n      }\n      // These aren't actually used by `agent-base`, but are required\n      // for the TypeScript definition files in `@types/node` :/\n      this.maxFreeSockets = 1;\n      this.maxSockets = 1;\n      this.maxTotalSockets = Infinity;\n      this.sockets = {};\n      this.freeSockets = {};\n      this.requests = {};\n      this.options = {};\n    }\n    get defaultPort() {\n      if (typeof this.explicitDefaultPort === 'number') {\n        return this.explicitDefaultPort;\n      }\n      return isSecureEndpoint() ? 443 : 80;\n    }\n    set defaultPort(v) {\n      this.explicitDefaultPort = v;\n    }\n    get protocol() {\n      if (typeof this.explicitProtocol === 'string') {\n        return this.explicitProtocol;\n      }\n      return isSecureEndpoint() ? 'https:' : 'http:';\n    }\n    set protocol(v) {\n      this.explicitProtocol = v;\n    }\n    callback(req, opts, fn) {\n      throw new Error('\"agent-base\" has no default implementation, you must subclass and override `callback()`');\n    }\n    /**\n     * Called by node-core's \"_http_client.js\" module when creating\n     * a new HTTP request with this Agent instance.\n     *\n     * @api public\n     */\n    addRequest(req, _opts) {\n      const opts = Object.assign({}, _opts);\n      if (typeof opts.secureEndpoint !== 'boolean') {\n        opts.secureEndpoint = isSecureEndpoint();\n      }\n      if (opts.host == null) {\n        opts.host = 'localhost';\n      }\n      if (opts.port == null) {\n        opts.port = opts.secureEndpoint ? 443 : 80;\n      }\n      if (opts.protocol == null) {\n        opts.protocol = opts.secureEndpoint ? 'https:' : 'http:';\n      }\n      if (opts.host && opts.path) {\n        // If both a `host` and `path` are specified then it's most\n        // likely the result of a `url.parse()` call... we need to\n        // remove the `path` portion so that `net.connect()` doesn't\n        // attempt to open that as a unix socket file.\n        delete opts.path;\n      }\n      delete opts.agent;\n      delete opts.hostname;\n      delete opts._defaultAgent;\n      delete opts.defaultPort;\n      delete opts.createConnection;\n      // Hint to use \"Connection: close\"\n      // XXX: non-documented `http` module API :(\n      req._last = true;\n      req.shouldKeepAlive = false;\n      let timedOut = false;\n      let timeoutId = null;\n      const timeoutMs = opts.timeout || this.timeout;\n      const onerror = err => {\n        if (req._hadError) return;\n        req.emit('error', err);\n        // For Safety. Some additional errors might fire later on\n        // and we need to make sure we don't double-fire the error event.\n        req._hadError = true;\n      };\n      const ontimeout = () => {\n        timeoutId = null;\n        timedOut = true;\n        const err = new Error(`A \"socket\" was not created for HTTP request before ${timeoutMs}ms`);\n        err.code = 'ETIMEOUT';\n        onerror(err);\n      };\n      const callbackError = err => {\n        if (timedOut) return;\n        if (timeoutId !== null) {\n          clearTimeout(timeoutId);\n          timeoutId = null;\n        }\n        onerror(err);\n      };\n      const onsocket = socket => {\n        if (timedOut) return;\n        if (timeoutId != null) {\n          clearTimeout(timeoutId);\n          timeoutId = null;\n        }\n        if (isAgent(socket)) {\n          // `socket` is actually an `http.Agent` instance, so\n          // relinquish responsibility for this `req` to the Agent\n          // from here on\n          debug('Callback returned another Agent instance %o', socket.constructor.name);\n          socket.addRequest(req, opts);\n          return;\n        }\n        if (socket) {\n          socket.once('free', () => {\n            this.freeSocket(socket, opts);\n          });\n          req.onSocket(socket);\n          return;\n        }\n        const err = new Error(`no Duplex stream was returned to agent-base for \\`${req.method} ${req.path}\\``);\n        onerror(err);\n      };\n      if (typeof this.callback !== 'function') {\n        onerror(new Error('`callback` is not defined'));\n        return;\n      }\n      if (!this.promisifiedCallback) {\n        if (this.callback.length >= 3) {\n          debug('Converting legacy callback function to promise');\n          this.promisifiedCallback = promisify_1.default(this.callback);\n        } else {\n          this.promisifiedCallback = this.callback;\n        }\n      }\n      if (typeof timeoutMs === 'number' && timeoutMs > 0) {\n        timeoutId = setTimeout(ontimeout, timeoutMs);\n      }\n      if ('port' in opts && typeof opts.port !== 'number') {\n        opts.port = Number(opts.port);\n      }\n      try {\n        debug('Resolving socket for %o request: %o', opts.protocol, `${req.method} ${req.path}`);\n        Promise.resolve(this.promisifiedCallback(req, opts)).then(onsocket, callbackError);\n      } catch (err) {\n        Promise.reject(err).catch(callbackError);\n      }\n    }\n    freeSocket(socket, opts) {\n      debug('Freeing socket %o %o', socket.constructor.name, opts);\n      socket.destroy();\n    }\n    destroy() {\n      debug('Destroying agent %o', this.constructor.name);\n    }\n  }\n  createAgent.Agent = Agent;\n  // So that `instanceof` works correctly\n  createAgent.prototype = createAgent.Agent.prototype;\n})(createAgent || (createAgent = {}));\nmodule.exports = createAgent;","map":{"version":3,"names":["__importDefault","mod","__esModule","events_1","require","debug_1","promisify_1","debug","default","isAgent","v","Boolean","addRequest","isSecureEndpoint","stack","Error","split","some","l","indexOf","createAgent","callback","opts","Agent","EventEmitter","constructor","_opts","timeout","maxFreeSockets","maxSockets","maxTotalSockets","Infinity","sockets","freeSockets","requests","options","defaultPort","explicitDefaultPort","protocol","explicitProtocol","req","fn","Object","assign","secureEndpoint","host","port","path","agent","hostname","_defaultAgent","createConnection","_last","shouldKeepAlive","timedOut","timeoutId","timeoutMs","onerror","err","_hadError","emit","ontimeout","code","callbackError","clearTimeout","onsocket","socket","name","once","freeSocket","onSocket","method","promisifiedCallback","length","setTimeout","Number","Promise","resolve","then","reject","catch","destroy","prototype","module","exports"],"sources":["D:/graduation project/Graduation_Project-Dubbizel--main/Graduation_Project-Dubbizel--main/Dubbizel_Angular/node_modules/agent-base/dist/src/index.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst events_1 = require(\"events\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst promisify_1 = __importDefault(require(\"./promisify\"));\nconst debug = debug_1.default('agent-base');\nfunction isAgent(v) {\n    return Boolean(v) && typeof v.addRequest === 'function';\n}\nfunction isSecureEndpoint() {\n    const { stack } = new Error();\n    if (typeof stack !== 'string')\n        return false;\n    return stack.split('\\n').some(l => l.indexOf('(https.js:') !== -1 || l.indexOf('node:https:') !== -1);\n}\nfunction createAgent(callback, opts) {\n    return new createAgent.Agent(callback, opts);\n}\n(function (createAgent) {\n    /**\n     * Base `http.Agent` implementation.\n     * No pooling/keep-alive is implemented by default.\n     *\n     * @param {Function} callback\n     * @api public\n     */\n    class Agent extends events_1.EventEmitter {\n        constructor(callback, _opts) {\n            super();\n            let opts = _opts;\n            if (typeof callback === 'function') {\n                this.callback = callback;\n            }\n            else if (callback) {\n                opts = callback;\n            }\n            // Timeout for the socket to be returned from the callback\n            this.timeout = null;\n            if (opts && typeof opts.timeout === 'number') {\n                this.timeout = opts.timeout;\n            }\n            // These aren't actually used by `agent-base`, but are required\n            // for the TypeScript definition files in `@types/node` :/\n            this.maxFreeSockets = 1;\n            this.maxSockets = 1;\n            this.maxTotalSockets = Infinity;\n            this.sockets = {};\n            this.freeSockets = {};\n            this.requests = {};\n            this.options = {};\n        }\n        get defaultPort() {\n            if (typeof this.explicitDefaultPort === 'number') {\n                return this.explicitDefaultPort;\n            }\n            return isSecureEndpoint() ? 443 : 80;\n        }\n        set defaultPort(v) {\n            this.explicitDefaultPort = v;\n        }\n        get protocol() {\n            if (typeof this.explicitProtocol === 'string') {\n                return this.explicitProtocol;\n            }\n            return isSecureEndpoint() ? 'https:' : 'http:';\n        }\n        set protocol(v) {\n            this.explicitProtocol = v;\n        }\n        callback(req, opts, fn) {\n            throw new Error('\"agent-base\" has no default implementation, you must subclass and override `callback()`');\n        }\n        /**\n         * Called by node-core's \"_http_client.js\" module when creating\n         * a new HTTP request with this Agent instance.\n         *\n         * @api public\n         */\n        addRequest(req, _opts) {\n            const opts = Object.assign({}, _opts);\n            if (typeof opts.secureEndpoint !== 'boolean') {\n                opts.secureEndpoint = isSecureEndpoint();\n            }\n            if (opts.host == null) {\n                opts.host = 'localhost';\n            }\n            if (opts.port == null) {\n                opts.port = opts.secureEndpoint ? 443 : 80;\n            }\n            if (opts.protocol == null) {\n                opts.protocol = opts.secureEndpoint ? 'https:' : 'http:';\n            }\n            if (opts.host && opts.path) {\n                // If both a `host` and `path` are specified then it's most\n                // likely the result of a `url.parse()` call... we need to\n                // remove the `path` portion so that `net.connect()` doesn't\n                // attempt to open that as a unix socket file.\n                delete opts.path;\n            }\n            delete opts.agent;\n            delete opts.hostname;\n            delete opts._defaultAgent;\n            delete opts.defaultPort;\n            delete opts.createConnection;\n            // Hint to use \"Connection: close\"\n            // XXX: non-documented `http` module API :(\n            req._last = true;\n            req.shouldKeepAlive = false;\n            let timedOut = false;\n            let timeoutId = null;\n            const timeoutMs = opts.timeout || this.timeout;\n            const onerror = (err) => {\n                if (req._hadError)\n                    return;\n                req.emit('error', err);\n                // For Safety. Some additional errors might fire later on\n                // and we need to make sure we don't double-fire the error event.\n                req._hadError = true;\n            };\n            const ontimeout = () => {\n                timeoutId = null;\n                timedOut = true;\n                const err = new Error(`A \"socket\" was not created for HTTP request before ${timeoutMs}ms`);\n                err.code = 'ETIMEOUT';\n                onerror(err);\n            };\n            const callbackError = (err) => {\n                if (timedOut)\n                    return;\n                if (timeoutId !== null) {\n                    clearTimeout(timeoutId);\n                    timeoutId = null;\n                }\n                onerror(err);\n            };\n            const onsocket = (socket) => {\n                if (timedOut)\n                    return;\n                if (timeoutId != null) {\n                    clearTimeout(timeoutId);\n                    timeoutId = null;\n                }\n                if (isAgent(socket)) {\n                    // `socket` is actually an `http.Agent` instance, so\n                    // relinquish responsibility for this `req` to the Agent\n                    // from here on\n                    debug('Callback returned another Agent instance %o', socket.constructor.name);\n                    socket.addRequest(req, opts);\n                    return;\n                }\n                if (socket) {\n                    socket.once('free', () => {\n                        this.freeSocket(socket, opts);\n                    });\n                    req.onSocket(socket);\n                    return;\n                }\n                const err = new Error(`no Duplex stream was returned to agent-base for \\`${req.method} ${req.path}\\``);\n                onerror(err);\n            };\n            if (typeof this.callback !== 'function') {\n                onerror(new Error('`callback` is not defined'));\n                return;\n            }\n            if (!this.promisifiedCallback) {\n                if (this.callback.length >= 3) {\n                    debug('Converting legacy callback function to promise');\n                    this.promisifiedCallback = promisify_1.default(this.callback);\n                }\n                else {\n                    this.promisifiedCallback = this.callback;\n                }\n            }\n            if (typeof timeoutMs === 'number' && timeoutMs > 0) {\n                timeoutId = setTimeout(ontimeout, timeoutMs);\n            }\n            if ('port' in opts && typeof opts.port !== 'number') {\n                opts.port = Number(opts.port);\n            }\n            try {\n                debug('Resolving socket for %o request: %o', opts.protocol, `${req.method} ${req.path}`);\n                Promise.resolve(this.promisifiedCallback(req, opts)).then(onsocket, callbackError);\n            }\n            catch (err) {\n                Promise.reject(err).catch(callbackError);\n            }\n        }\n        freeSocket(socket, opts) {\n            debug('Freeing socket %o %o', socket.constructor.name, opts);\n            socket.destroy();\n        }\n        destroy() {\n            debug('Destroying agent %o', this.constructor.name);\n        }\n    }\n    createAgent.Agent = Agent;\n    // So that `instanceof` works correctly\n    createAgent.prototype = createAgent.Agent.prototype;\n})(createAgent || (createAgent = {}));\nmodule.exports = createAgent;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}