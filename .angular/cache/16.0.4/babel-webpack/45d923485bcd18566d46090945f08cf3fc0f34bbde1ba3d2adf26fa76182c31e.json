{"ast":null,"code":"import { GoogleLoginProvider } from '@abacritt/angularx-social-login';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@abacritt/angularx-social-login\";\nimport * as i2 from \"@angular/common\";\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"img\", 14);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_9_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.signOut());\n    });\n    i0.ɵɵtext(5, \"Sign out\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r0.user.photoUrl, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r0.user.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.user.name);\n  }\n}\nfunction LoginComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_10_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.externalLogin());\n    });\n    i0.ɵɵtext(2, \"Google\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 16);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_10_Template_div_click_3_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onSignIn());\n    });\n    i0.ɵɵtext(4, \"sign in\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"div\", null, 17);\n    i0.ɵɵelementEnd();\n  }\n}\nclass LoginComponent {\n  constructor(authService, ngZone) {\n    this.authService = authService;\n    this.ngZone = ngZone;\n    //  async ngOnInit(){\n    //   const auth = new GoogleAuth();\n    //   const client = await auth.getClient();\n    // }\n    this.externalLogin = () => {\n      this.showError = false;\n      this.AuthService.signInWithGoogle();\n    };\n  }\n  ngOnInit() {\n    this.userSubscription = this.authService.authState.subscribe(user => {\n      this.user = user;\n    });\n    gapi.load('auth2', () => {\n      gapi.auth2.init({\n        client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com'\n      });\n    });\n  }\n  onSignIn() {\n    const auth2 = gapi.auth2.getAuthInstance();\n    auth2.signIn().then(googleUser => {\n      this.ngZone.run(() => {\n        const idToken = googleUser.getAuthResponse().id_token;\n        this.authService.signIn(GoogleLoginProvider.PROVIDER_ID, {\n          idToken\n        }).catch(error => {\n          console.error('Error signing in:', error);\n        });\n      });\n    });\n  }\n  signInWithGoogle() {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).catch(error => {\n      console.error('Error signing in:', error);\n    });\n  }\n  signOut() {\n    this.authService.signOut().catch(error => {\n      console.error('Error signing out:', error);\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.SocialAuthService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 25,\n  vars: 2,\n  consts: [[1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [3, \"click\"], [4, \"ngIf\"], [1, \"container\", \"mt-5\"], [1, \"row\", \"mt-5\"], [1, \"col-md-4\", \"mt-2\", \"m-auto\"], [1, \"btn\", \"btn-danger\"], [\"loginRef\", \"\"], [\"data-type\", \"standard\", \"data-size\", \"large\", \"data-theme\", \"outline\", \"data-text\", \"sign_in_with goooogle\", \"data-shape\", \"rectangular\", \"data-callback\", \"OnSuccess\", \"data-logo_alignment\", \"left\", 1, \"g_id_signin\"], [\"id\", \"g_id_onload\", \"data-client_id\", \"400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com\", \"data-context\", \"signin\", \"data-ux_mode\", \"redirect\", \"data-login_uri\", \"http://localhost:7189/api/signin-google\", \"data-auto_select\", \"true\", \"data-auto_prompt\", \"false\", \"data-itp_support\", \"true\"], [\"id\", \"buttonDiv\"], [\"data-locale\", \"fr\", 1, \"g_id_signin\"], [\"width\", \"50\", \"height\", \"50\", 3, \"src\", \"alt\"], [\"type\", \"button\", 1, \"btn\", \"btn-info\", 3, \"click\"], [\"data-onsuccess\", \"onSignIn\", 1, \"g-signin2\", 3, \"click\"], [\"googleSignInButton\", \"\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(4, \" ... \");\n      i0.ɵɵelement(5, \"hr\");\n      i0.ɵɵelementStart(6, \"div\")(7, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_7_listener() {\n        return ctx.signInWithGoogle();\n      });\n      i0.ɵɵtext(8, \"Sign in with Google\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 6, 3, \"div\", 4);\n      i0.ɵɵtemplate(10, LoginComponent_div_10_Template, 7, 0, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"div\", 5)(12, \"h1\");\n      i0.ɵɵtext(13, \"Google Login with Angular - ItSolutionStuff.com\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 6)(15, \"div\", 7)(16, \"button\", 8, 9);\n      i0.ɵɵtext(18, \" Login with Google \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(19, \"div\", 10)(20, \"div\", 11)(21, \"div\", 12);\n      i0.ɵɵtext(22, \"\\n...\\n\");\n      i0.ɵɵelement(23, \"div\", 13);\n      i0.ɵɵtext(24, \"\\n...\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.user);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.user);\n    }\n  },\n  dependencies: [i2.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginComponent };","map":{"version":3,"names":["GoogleLoginProvider","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_div_9_Template_button_click_4_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","signOut","ɵɵadvance","ɵɵproperty","ctx_r0","user","photoUrl","ɵɵsanitizeUrl","name","ɵɵtextInterpolate","LoginComponent_div_10_Template_button_click_1_listener","_r7","ctx_r6","externalLogin","LoginComponent_div_10_Template_div_click_3_listener","ctx_r8","onSignIn","LoginComponent","constructor","authService","ngZone","showError","AuthService","signInWithGoogle","ngOnInit","userSubscription","authState","subscribe","gapi","load","auth2","init","client_id","getAuthInstance","signIn","then","googleUser","run","idToken","getAuthResponse","id_token","PROVIDER_ID","catch","error","console","ɵɵdirectiveInject","i1","SocialAuthService","NgZone","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","LoginComponent_Template_button_click_7_listener","ɵɵtemplate","LoginComponent_div_9_Template","LoginComponent_div_10_Template"],"sources":["D:\\graduation project\\Graduation_Project-Dubbizel--main\\Graduation_Project-Dubbizel--main\\Dubbizel_Angular\\src\\app\\Login\\login\\login.component.ts","D:\\graduation project\\Graduation_Project-Dubbizel--main\\Graduation_Project-Dubbizel--main\\Dubbizel_Angular\\src\\app\\Login\\login\\login.component.html"],"sourcesContent":["import { Component, NgZone, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/Service/auth.service';\nimport { SocialAuthService, GoogleLoginProvider, SocialUser } from '@abacritt/angularx-social-login';\nimport { Subscription } from 'rxjs';\n\nimport { GoogleAuth } from 'google-auth-library';\n\ndeclare const gapi: any;\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit{\n  showError:any\n  user!: SocialUser;\n  private userSubscription: Subscription | undefined;\n\n  constructor(private authService: SocialAuthService,private ngZone: NgZone) {}\n\n  ngOnInit(): void {\n    this.userSubscription = this.authService.authState.subscribe(user => {\n      this.user = user;\n    });\n\n    gapi.load('auth2', () => {\n      gapi.auth2.init({\n        client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com'\n\n      });\n    });\n  }\n\n  onSignIn(): void {\n    const auth2 = gapi.auth2.getAuthInstance();\n    auth2.signIn().then((googleUser: { getAuthResponse: () => { (): any; new(): any; id_token: any; }; }) => {\n      this.ngZone.run(() => {\n        const idToken = googleUser.getAuthResponse().id_token;\n        this.authService.signIn(GoogleLoginProvider.PROVIDER_ID, { idToken }).catch(error => {\n          console.error('Error signing in:', error);\n        });\n      });\n    });\n  }\n\n\n  signInWithGoogle(): void {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).catch(error => {\n      console.error('Error signing in:', error);\n    });\n  }\n\n  signOut(): void {\n    this.authService.signOut().catch(error => {\n      console.error('Error signing out:', error);\n    });\n  }\n//  async ngOnInit(){\n//   const auth = new GoogleAuth();\n//   const client = await auth.getClient();\n\n// }\n  externalLogin = () => {\n    this.showError = false;\n    this.AuthService.signInWithGoogle();\n  }\n}\n// import { Component, OnInit, OnDestroy, ViewChild, ElementRef, AfterViewInit, NgZone } from '@angular/core';\n// import { SocialAuthService, GoogleLoginProvider , SocialUser } from '@abacritt/angularx-social-login';\n// import { Subscription } from 'rxjs';\n// import { AuthService } from 'src/app/Service/auth.service';\n\n// declare const google: any;\n\n// @Component({\n//   selector: 'app-login',\n//   templateUrl: './login.component.html',\n//   styleUrls: ['./login.component.scss']\n// })\n// export class LoginComponent implements OnInit, OnDestroy, AfterViewInit {\n//   user: any;\n//   private userSubscription: any;\n//   showError:any\n//   @ViewChild('googleSignInButton', { static: false })\n//   googleSignInButton!: ElementRef;\n//   auth2: any;\n    \n//   @ViewChild('loginRef', {static: false }) loginElement!: ElementRef;\n     \n//   constructor(private AuthService :AuthService ,private authService: SocialAuthService, private ngZone: NgZone) {\n\n//     this.AuthService.fetchData().subscribe(data => {\n//       console.log(data);\n//     });\n//   }\n\n//   ngOnInit(): void {\n//      this.authService.authState.subscribe(user => {\n//       this.user = user;\n//     });\n    \n//     console.log(this.user)\n//     setInterval(() => {\n      \n  \n\n//       if(this.AuthService.user != null){\n//         console.log(\"good\")\n\n//         console.log(this.AuthService.externalAuth)\n//         console.log(this.AuthService.user)\n//         this.AuthService.sendUserData(this.AuthService.externalAuth).subscribe({\n//           next: data => console.log(data),\n//           error: err => console.log(err),\n//         })\n//       }\n//     }\n      \n//       ,5000)\n//   }\n\n//   callLoginButton() {\n     \n//     this.auth2.attachClickHandler(this.loginElement.nativeElement, {},\n//       (googleAuthUser:any) => {\n     \n//         let profile = googleAuthUser.getBasicProfile();\n//         console.log('Token || ' + googleAuthUser.getAuthResponse().id_token);\n//         console.log('ID: ' + profile.getId());\n//         console.log('Name: ' + profile.getName());\n//         console.log('Image URL: ' + profile.getImageUrl());\n//         console.log('Email: ' + profile.getEmail());\n            \n//        /* Write Your Code Here */\n    \n//       }, (error:any) => {\n//         alert(JSON.stringify(error, undefined, 2));\n//       });\n \n//   }\n  \n//   googleAuthSDK() {\n     \n//     (<any>window)['googleSDKLoaded'] = () => {\n//       (<any>window)['gapi'].load('auth2', () => {\n//         this.auth2 = (<any>window)['gapi'].auth2.init({\n//           client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com',\n//           cookiepolicy: 'single_host_origin',\n//           scope: 'profile email'\n//         });\n//         this.callLoginButton();\n//       });\n//     }\n\n//     (function(d, s, id){\n//       var js, fjs = d.getElementsByTagName(s)[0];\n//       if (d.getElementById(id)) {return;}\n//       js = d.createElement('script'); \n//       js.id = id;\n//       js.src = \"https://apis.google.com/js/platform.js?onload=googleSDKLoaded\";\n//       fjs?.parentNode?.insertBefore(js, fjs);\n//     }(document, 'script', 'google-jssdk'));\n//   }\n\n//   onGoogleSignIn(): void {\n//     this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n//   }\n//   externalLogin = () => {\n//     this.showError = false;\n//     this.AuthService.signInWithGoogle();\n//   }\n//   signInWithGoogle(): void {\n//     this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n//   }\n//   ngAfterViewInit(): void {\n//     this.renderGoogleSignInButton();\n//     this.googleAuthSDK();\n\n//   }\n\n//   renderGoogleSignInButton(): void {\n//     google.accounts.id.initialize({\n//       client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com',\n//       callback: (response:any) => this.onSignIn()\n//     });\n//     console.log(\"reach\")\n//     google.accounts.id.renderButton(this.googleSignInButton.nativeElement, {\n//       theme: 'outline',\n//       size: 'large',\n//       width: '240',\n//       height: '50',\n//       longtitle: true\n//     });\n//   }\n\n//   onSignIn(): void {\n//     // this.ngZone.run(() => {\n//       console.log(\"reach on\")\n\n//       // const idToken = response.credential;\n//       this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).catch(error => {\n//         console.error('Error signing in:', error);\n//       });\n//     // });\n//   }\n\n//   signOut(): void {\n//     this.authService.signOut().catch(error => {\n//       console.error('Error signing out:', error);\n//     });\n//   }\n\n//   ngOnDestroy(): void {\n//     if (this.userSubscription) {\n//       this.userSubscription.unsubscribe();\n//     }\n//   }\n// }\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <h1 class=\"card-title\">Login</h1>\n        ...\n        <!-- <form [formGroup]=\"loginForm\" autocomplete=\"off\" novalidate (ngSubmit)=\"loginUser(loginForm.value)\">\n            ...\n        </form> -->\n        <hr>\n        <div>\n            <!-- <div *ngIf=\"user\">\n                <img [src]=\"user.photoUrl\" [alt]=\"user.name\" width=\"50\" height=\"50\">\n                <span>{{ user.name }}</span>\n                <button (click)=\"signOut()\">Sign out</button>\n              </div>\n              <div *ngIf=\"!user\">\n                <asl-google-signin-button >\n                    Sign in with Google\n                     <button (click)=\"signInWithGoogle()\">Sign in with Google</button> \n                </asl-google-signin-button>\n                <div class=\"g-signin2\" (click)=\"onSignIn()\" data-onsuccess=\"onSignIn\"></div>\n\n              </div> -->\n              <button (click)=\"signInWithGoogle()\">Sign in with Google</button>\n\n              <div *ngIf=\"user\">\n                <img [src]=\"user.photoUrl\" [alt]=\"user.name\" width=\"50\" height=\"50\">\n                <span>{{ user.name }}</span>\n                <button (click)=\"signOut()\">Sign out</button>\n              </div>\n              <div *ngIf=\"!user\">\n                <button class=\"btn btn-info\" type=\"button\" (click)=\"externalLogin()\">Google</button>\n\n                <div class=\"g-signin2\" (click)=\"onSignIn()\" data-onsuccess=\"onSignIn\">sign in</div>\n\n                <div #googleSignInButton \n                ></div>\n              </div>\n              \n        </div>\n    </div>\n</div>\n\n<div class=\"container mt-5\">\n\n  <h1>Google Login with Angular - ItSolutionStuff.com</h1>\n\n  <div class=\"row mt-5\">\n\n    <div class=\"col-md-4 mt-2 m-auto \">\n\n        <button class=\"btn btn-danger\" #loginRef>\n\n            Login with Google\n\n          </button>\n\n    </div>    \n\n  </div>\n\n</div>\n<!-- data-login_uri=\"http://localhost:7189/api/Account/PostUser\"  -->\n<!-- data-login_uri=\"http://localhost:4200\" -->\n<script src=\"https://accounts.google.com/gsi/client\" async defer></script>\n<!-- <div id=\"g_id_onload\"\ndata-client_id='400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com'\n   data-auto_prompt=\"false\">\n</div> -->\n<div class=\"g_id_signin\"\n   data-type=\"standard\"\n   data-size=\"large\"\n   data-theme=\"outline\"\n   data-text=\"sign_in_with goooogle\"\n   data-shape=\"rectangular\"\n   data-callback=\"OnSuccess\"\n   data-logo_alignment=\"left\">\n</div>\n <div id=\"g_id_onload\"\n     data-client_id=\"400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com\"\n     data-context=\"signin\"\n     data-ux_mode=\"redirect\"\n     data-login_uri=\"http://localhost:7189/api/signin-google\"\n     data-auto_select=\"true\"\n     data-auto_prompt=\"false\"\n     data-itp_support=\"true\">\n</div>\n<!--\n<div class=\"g_id_signin\"\n     data-type=\"standard\"\n     data-shape=\"pill\"\n     data-theme=\"outline\"\n     data-text=\"signin_with\"\n     data-size=\"large\"\n     data-logo_alignment=\"left\">\n</div> -->\n\n<script src=\"https://accounts.google.com/gsi/client\" async defer></script>\n<script>\n  function OnSuccess(){\n    console.log(\"OnSuccess\")\n  }\n  function handleCredentialResponse(response) {\n    console.log(\"Encoded JWT ID token: \" + response.credential);\n  }\n  window.onload = function () {\n    google.accounts.id.initialize({\n      client_id: '400690855047-gkqnu3ioohb9vbc0pevpoa5h5eis6oc6.apps.googleusercontent.com',\n      callback: handleCredentialResponse\n    });\n    google.accounts.id.renderButton(\n      document.getElementById(\"buttonDiv\"),\n      { theme: \"outline\", size: \"large\" }  // customization attributes\n    );\n    google.accounts.id.prompt(); // also display the One Tap dialog\n  }\n</script>\n<div id=\"buttonDiv\"></div> \n\n\n<script src=\"https://accounts.google.com/gsi/client?hl=fr\" async defer></script>\n...\n<div class=\"g_id_signin\"\n  data-locale=\"fr\">\n</div>\n<!-- <script src=\"https://accounts.google.com/gsi/client?hl=fr\" async defer></script> -->\n...\n<!-- <script>\ngoogle.accounts.id.renderButton(\n  document.getElementById(\"buttonDiv\"),                \n  { locale: \"fr\" }\n);\n</script> -->\n<script>\ngoogle.accounts.id.renderButton(\n  document.getElementById(\"buttonDiv\"),                \n  { locale: \"fr\" }\n);\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}